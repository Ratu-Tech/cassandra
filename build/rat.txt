
*****************************************************
Summary
-------
Notes: 0
Binaries: 1
Archives: 0
Standards: 4407

Apache Licensed: 4035
Generated Documents: 0

JavaDocs are generated and so license header is optional
Generated files do not required license headers

372 Unknown Licenses

*******************************

Unapproved licenses:

  /Users/lei.fu/java/mca/Ratu-Cassandra/build/lib/jars/netty-bom-4.1.58.Final.pom
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_concurrent_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_oneFailure_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_success_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithBuilderAuto_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithBuilderManual_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithBulkStaticBuild_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithFastBuilder_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithIterableStaticBuildMethod_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithMegamorphicBulkStaticBuildNoop_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_transformAndFilterRemove_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_transformAndFilterReplace_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_transformReplace_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_benchUpdate_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_baseline_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_fromComparableBytes_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_booleanFromBooleanSupplier_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_booleanFromPlainSupplier_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_intFromIntSupplier_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_intFromPlainSupplier_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_buildTreeTest_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_treeBuilderRecycleAdd_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_searchFound_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_searchNotFound_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_bench_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_serializationTest_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_keyCacheLoadTest_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchCrc32NoIntrinsic_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchCrc32_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchHasherCrc32c_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchPureJavaCrc32c_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_compactTest_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_persistEvents_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_publishEvents_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_countFiles_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_baseline_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_fastThreadLocal_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_threadLocal_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_benchHasherMD5_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_benchHasherMurmur3_128_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_benchMessageDigestMD5_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_benchInsertToDEHR_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_benchLatencyMetricsWrite_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_serialize40_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_serializePre40_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateCell_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateClusteringBound_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateClusteringBoundary_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateClustering_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_deserialize_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_serialize_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPByte_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPInt_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPLong_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPMixed_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSByte_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSInt_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSLong_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSMixed_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMLargeLegacyWriteUTF_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMLargeStringBDOSP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMLargeStringBOS_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMSmallLegacyWriteUTF_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMSmallStringBDOSP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMSmallStringBOS_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMTinyLegacyWriteUTF_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMTinyStringBDOSP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMTinyStringBOS_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testRLargeLegacyWriteUTF_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testRLargeStringBDOSP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testRLargeStringBOS_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testSmallLegacyWriteUTF_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testSmallStringBDOSP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testSmallStringBOS_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testTinyLegacyWriteUTF_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testTinyStringBDOSP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testTinyStringBOS_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_searchTokenForOldPendingRanges_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_searchToken_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_chunkedBuf_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_oneBigBuf_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_read_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_write_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_lz4_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_snappy_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_test_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_sizeOfAsciiString_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_sizeOfString_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongTextAsASCII_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongTextWithExactSizeSkipCalc_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongTextWithExactSize_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongText_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortTextAsASCII_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortTextWithExactSizeSkipCalc_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortTextWithExactSize_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortText_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_shared_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_unshared_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testComputeUnsignedVIntSize_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite1ByteBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite1ByteDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite2BytesBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite2BytesDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite3BytesBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite3BytesDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite4BytesBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite4BytesDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite5BytesBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite5BytesDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite6BytesBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite6BytesDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite7BytesBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite7BytesDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite8BytesBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite8BytesDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite9BytesBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite9BytesDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWriteRandomLongBB_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWriteRandomLongDOP_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_blockStreamReader_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_blockStreamWriter_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_partialStreamReader_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_partialStreamWriter_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readFixed_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readOutside_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readRandomInside_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readRandomWOutside_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readFixed_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readGreaterMatch_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readGreater_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readOutside_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readRandomInside_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readRandomWOutside_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readReversedMatch_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readReversed_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_writeTable_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_consumeEntries_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_consumeValues_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_getByIterateValueSlice_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_getRandom_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_iterateEntries_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_iterateValuesLimited_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_iterateValues_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_consumeEntries_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_consumeValues_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_getRandom_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateEntries_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateValuesLimited_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateValuesUnordered_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateValues_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_processEntries_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateEntries_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateValuesLimited_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateValuesUnordered_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateValues_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_applyRandom_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_applySequential_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType_B1.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType_B2.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType_B3.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_putRandom_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_putSequential_jmhTest.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/lib/jars/junit-bom-5.6.0.pom
  /Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/CqlLexer.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/CqlParser.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/Cql_Lexer.java
  /Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/Cql_Parser.java

*******************************

Archives (+ indicates readable, $ unreadable): 

 
*****************************************************
  Files with Apache License headers will be marked AL
  Binary files (which do not require AL headers) will be marked B
  Compressed archives will be marked A
  Notices, licenses etc will be marked N
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.build/build-git.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.build/build-owasp.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.build/build-rat.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.build/build-resolver.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.build/cassandra-build-deps-template.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.build/cassandra-deps-template.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.build/dependency-check-suppressions.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.build/parent-pom-template.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.circleci/config.yml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.circleci/config_template.yml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.circleci/generate.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.circleci/license.yml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/.circleci/readme.md
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/CONTRIBUTING.md
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/TESTING.md
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/bin/cassandra.in.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/bin/cqlsh.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build-shaded-dtest-jar.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/apache-cassandra-5.0-SNAPSHOT-parent.pom
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/apache-cassandra-5.0-SNAPSHOT.pom
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/classes/stress/org/apache/cassandra/stress/graph/graph.html
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/bin/cassandra.in.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/bin/cqlsh.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/conf/cassandra-env.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/conf/logback-tools.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/conf/logback.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/doc/SASI.md
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/doc/cql3/CQL.css
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/doc/cql3/CQL.html
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cassandra-cqlsh-tests.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/__init__.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/authproviderhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/copyutil.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/cql3handling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/cqlhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/cqlshhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/cqlshmain.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/displaying.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/formatting.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/helptopics.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/pylexotron.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/saferscanner.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/sslhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/__init__.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/ansi_colors.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/basecase.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/cassconnect.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/run_cqlsh.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/test_authproviderhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/test_constants.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/test_copyutil.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/test_cql_parsing.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/test_cqlsh_completion.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/test_cqlsh_output.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/test_keyspace_init.cql
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/test_unicode.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/test/winpty.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/tracing.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/cqlshlib/util.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/pylib/setup.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/dist/tools/bin/cassandra.in.sh
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/lib/jars/netty-bom-4.1.58.Final.pom
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/blogpost.yaml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/byteman/mutation_limiter.btm
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/byteman/stream_failure.btm
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/functions/configure_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/functions/install_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/functions/nodetool_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/functions/start_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/functions/stop_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/functions/wipe_cassandra.sh
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_concurrent_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_oneFailure_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_success_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithBuilderAuto_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithBuilderManual_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithBulkStaticBuild_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithFastBuilder_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithIterableStaticBuildMethod_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithMegamorphicBulkStaticBuildNoop_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_transformAndFilterRemove_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_transformAndFilterReplace_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_transformReplace_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_benchUpdate_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_baseline_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_fromComparableBytes_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_booleanFromBooleanSupplier_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_booleanFromPlainSupplier_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_intFromIntSupplier_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_intFromPlainSupplier_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_buildTreeTest_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_treeBuilderRecycleAdd_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_searchFound_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_searchNotFound_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_bench_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_serializationTest_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_keyCacheLoadTest_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchCrc32NoIntrinsic_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchCrc32_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchHasherCrc32c_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchPureJavaCrc32c_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_compactTest_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_persistEvents_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_publishEvents_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_countFiles_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_baseline_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_fastThreadLocal_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_threadLocal_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_benchHasherMD5_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_benchHasherMurmur3_128_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_benchMessageDigestMD5_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_benchInsertToDEHR_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_benchLatencyMetricsWrite_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_serialize40_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_serializePre40_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateCell_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateClusteringBound_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateClusteringBoundary_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateClustering_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_deserialize_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_serialize_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPByte_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPInt_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPLong_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPMixed_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSByte_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSInt_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSLong_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSMixed_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMLargeLegacyWriteUTF_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMLargeStringBDOSP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMLargeStringBOS_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMSmallLegacyWriteUTF_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMSmallStringBDOSP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMSmallStringBOS_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMTinyLegacyWriteUTF_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMTinyStringBDOSP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMTinyStringBOS_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testRLargeLegacyWriteUTF_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testRLargeStringBDOSP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testRLargeStringBOS_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testSmallLegacyWriteUTF_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testSmallStringBDOSP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testSmallStringBOS_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testTinyLegacyWriteUTF_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testTinyStringBDOSP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testTinyStringBOS_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_searchTokenForOldPendingRanges_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_searchToken_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_chunkedBuf_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_oneBigBuf_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_read_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_write_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_lz4_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_snappy_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_test_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_sizeOfAsciiString_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_sizeOfString_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongTextAsASCII_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongTextWithExactSizeSkipCalc_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongTextWithExactSize_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongText_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortTextAsASCII_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortTextWithExactSizeSkipCalc_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortTextWithExactSize_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortText_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_shared_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_unshared_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testComputeUnsignedVIntSize_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite1ByteBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite1ByteDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite2BytesBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite2BytesDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite3BytesBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite3BytesDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite4BytesBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite4BytesDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite5BytesBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite5BytesDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite6BytesBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite6BytesDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite7BytesBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite7BytesDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite8BytesBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite8BytesDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite9BytesBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite9BytesDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWriteRandomLongBB_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWriteRandomLongDOP_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_blockStreamReader_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_blockStreamWriter_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_partialStreamReader_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_partialStreamWriter_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readFixed_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readOutside_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readRandomInside_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readRandomWOutside_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readFixed_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readGreaterMatch_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readGreater_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readOutside_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readRandomInside_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readRandomWOutside_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readReversedMatch_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readReversed_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_writeTable_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_consumeEntries_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_consumeValues_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_getByIterateValueSlice_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_getRandom_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_iterateEntries_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_iterateValuesLimited_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_iterateValues_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_consumeEntries_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_consumeValues_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_getRandom_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateEntries_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateValuesLimited_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateValuesUnordered_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateValues_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_processEntries_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateEntries_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateValuesLimited_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateValuesUnordered_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateValues_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_applyRandom_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_applySequential_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType_B1.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType_B2.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType_B3.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_putRandom_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_putSequential_jmhTest.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/build/test/lib/jars/junit-bom-5.6.0.pom
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/build/tmp-apache-cassandra-5.0-SNAPSHOT-deps.pom
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/checkstyle.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/checkstyle_suppressions.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/checkstyle_test.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/conf/cassandra-env.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/conf/logback-tools.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/conf/logback.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/README.md
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/SASI.md
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/cql3/CQL.css
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/cql3/CQL.html
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/cql3/CQL.textile
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/native_protocol_v3.spec
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/native_protocol_v4.spec
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/native_protocol_v5.spec
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/scripts/convert_yaml_to_adoc.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/doc/scripts/gen-nodetool-docs.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/examples/ssl-factory/build.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/examples/ssl-factory/src/org/apache/cassandra/security/KubernetesSecretsPEMSslContextFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/examples/ssl-factory/src/org/apache/cassandra/security/KubernetesSecretsSslContextFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/examples/ssl-factory/test/unit/org/apache/cassandra/security/KubernetesSecretsPEMSslContextFactoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/examples/ssl-factory/test/unit/org/apache/cassandra/security/KubernetesSecretsSslContextFactoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/examples/triggers/build.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/examples/triggers/src/org/apache/cassandra/triggers/AuditTrigger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cassandra-cqlsh-tests.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/__init__.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/authproviderhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/copyutil.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/cql3handling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/cqlhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/cqlshhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/cqlshmain.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/displaying.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/formatting.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/helptopics.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/pylexotron.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/saferscanner.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/sslhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/__init__.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/ansi_colors.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/basecase.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/cassconnect.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/run_cqlsh.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/test_authproviderhandling.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/test_constants.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/test_copyutil.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/test_cql_parsing.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/test_cqlsh_completion.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/test_cqlsh_output.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/test_keyspace_init.cql
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/test_unicode.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/test/winpty.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/tracing.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/cqlshlib/util.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/pylib/setup.py
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/redhat/README.md
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/redhat/cassandra.in.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/redhat/cassandra.spec
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/redhat/noboolean/cassandra.in.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/redhat/noboolean/cassandra.spec
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/relocate-dependencies.pom
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/antlr/Cql.g
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/antlr/Lexer.g
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/antlr/Parser.g
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/CqlLexer.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/CqlParser.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/Cql_Lexer.java
 !????? /Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/Cql_Parser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/index/sasi/analyzer/StandardTokenizerImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/com/datastax/driver/core/PreparedStatementHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditLogContext.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditLogEntry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditLogEntryCategory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditLogEntryType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditLogFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditLogManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditLogManagerMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditLogOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/AuditLogOptionsCompositeData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/BinAuditLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/DiagnosticEventAuditLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/FileAuditLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/IAuditLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/audit/NoOpAuditLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AllowAllAuthenticator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AllowAllAuthorizer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AllowAllInternodeAuthenticator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AllowAllNetworkAuthorizer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthCacheMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthCacheService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthConfig.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthEvents.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthKeyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthProperties.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthPropertiesMXBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthSchemaChangeListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/AuthenticatedUser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/CacheRefresher.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/CassandraAuthorizer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/CassandraLoginModule.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/CassandraNetworkAuthorizer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/CassandraPrincipal.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/CassandraRoleManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/DCPermissions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/DataResource.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/FunctionResource.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/IAuthenticator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/IAuthorizer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/IInternodeAuthenticator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/INetworkAuthorizer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/IResource.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/IRoleManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/JMXResource.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/NetworkPermissionsCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/NetworkPermissionsCacheMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/PasswordAuthenticator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/Permission.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/PermissionDetails.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/PermissionsCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/PermissionsCacheMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/Resources.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/Role.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/RoleOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/RoleResource.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/Roles.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/RolesCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/RolesCacheMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/jmx/AuthenticationProxy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/batchlog/Batch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/batchlog/BatchRemoveVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/batchlog/BatchStoreVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManagerMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/CacheKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/CacheProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/CacheSize.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/CaffeineCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/ChunkCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/CounterCacheKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/ICache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/IMeasurableMemory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/IRowCacheEntry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/InstrumentingCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/KeyCacheKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/NopCacheProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/OHCProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/RefCountedMemory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/RowCacheKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/RowCacheSentinel.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/SerializingCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cache/SerializingCacheProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/DebuggableTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ExecutionFailure.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ExecutorBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ExecutorBuilderFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ExecutorFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ExecutorLocals.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/FutureTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/FutureTaskWithResources.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ImmediateExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/InfiniteLoopExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/Interruptible.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/LocalAwareExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/LocalAwareSequentialExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/LocalAwareSingleThreadExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/LocalAwareThreadPoolExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/NamedThreadFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ResizableThreadPool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ResizableThreadPoolMXBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/SEPExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/SEPExecutorMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/SEPWorker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ScheduledExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ScheduledExecutors.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ScheduledThreadPoolExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/SequentialExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/SharedExecutorPool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/Shutdownable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/SingleThreadExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/Stage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/SyncFutureTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/TaskFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ThreadPoolExecutorBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ThreadPoolExecutorBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ThreadPoolExecutorJMXAdapter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/ThreadPoolExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/concurrent/WrappedExecutorPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/CassandraRelevantEnv.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/CassandraRelevantProperties.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/Config.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/ConfigurationLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/Converters.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/DataRateSpec.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/DataStorageSpec.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/DefaultLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/DurationSpec.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/EncryptionOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/ForwardingProperty.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/GuardrailsOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/InheritingClass.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/Loader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/ParameterizedClass.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/Properties.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/Replacement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/Replacements.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/Replaces.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/ReplacesList.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/ReplicaFilteringProtectionOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/Scriptengines.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/StartupChecksOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/SubnetGroups.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/TransparentDataEncryptionOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/AbstractMarker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/AssignmentTestable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Attributes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/BatchQueryOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/CQL3Type.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/CQLFragmentParser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/CQLStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/ColumnIdentifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/ColumnSpecification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Constants.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/CqlBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/CustomPayloadMirroringQueryHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Duration.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/ErrorCollector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/ErrorListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/FieldIdentifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Json.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Lists.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Maps.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/MultiColumnRelation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Operation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Operations.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Operator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/PasswordObfuscator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/QualifiedName.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/QueryEvents.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/QueryHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/QueryOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Relation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/ReservedKeywords.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/ResultSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/RoleName.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/SchemaElement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Sets.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/SingleColumnRelation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Term.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Terms.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/TokenRelation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Tuples.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/TypeCast.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/UTName.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/UntypedResultSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/UpdateParameters.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/UserTypes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/Validation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/VariableSpecifications.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/WhereClause.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/conditions/AbstractConditions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/conditions/ColumnCondition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/conditions/ColumnConditions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/conditions/Conditions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/conditions/IfExistsCondition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/conditions/IfNotExistsCondition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/AbstractFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/AggregateFcts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/AggregateFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/BytesConversionFcts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/CastFcts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/CollectionFcts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/FromJsonFct.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/Function.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/FunctionCall.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/FunctionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/FunctionName.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/FunctionParameter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/FunctionResolver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/JavaBasedUDFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/JavaUDF.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/MathFcts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/NativeAggregateFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/NativeFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/NativeFunctions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/NativeScalarFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/OperationFcts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/PartialScalarFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/PartiallyAppliedScalarFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/PreComputedScalarFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/ScalarFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/TimeFcts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/ToJsonFct.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/TokenFct.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/UDAggregate.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/UDFByteCodeVerifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/UDFContext.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/UDFContextImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/UDFExecutorService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/UDFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/UDHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/UserFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/UuidFcts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/masking/DefaultMaskingFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/masking/HashMaskingFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/masking/MaskingFcts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/masking/MaskingFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/masking/NullMaskingFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/masking/PartialMaskingFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/masking/ReplaceMaskingFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/AbstractAddressableByIndexData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/AbstractData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/AbstractGettableByIndexData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/AbstractGettableData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/CodecRegistry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/CodecUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/DataType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/DataTypeClassNameParser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/Duration.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/GettableByIndexData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/GettableByNameData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/GettableData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/LocalDate.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/Metadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/ParseUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/SettableByIndexData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/SettableByNameData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/SettableData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/TupleType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/TupleValue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/TypeCodec.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/TypeTokens.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/UDTValue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/UserType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/exceptions/CodecNotFoundException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/exceptions/DriverException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/exceptions/DriverInternalError.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/exceptions/InvalidTypeException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/package-info.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/functions/types/utils/Bytes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/ClusteringColumnRestrictions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/CustomIndexExpression.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/IndexRestrictions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/MultiColumnRestriction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/PartitionKeyRestrictions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/PartitionKeySingleRestrictionSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/Restriction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/RestrictionSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/RestrictionSetWrapper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/Restrictions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/SingleColumnRestriction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/SingleRestriction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/StatementRestrictions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/TermSlice.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/TokenFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/restrictions/TokenRestriction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/AbstractFunctionSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/AggregateFunctionSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/AliasedSelectable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/CollectionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/ColumnFilterFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/ColumnTimestamps.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/ElementsSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/FieldSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/ForwardingFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/ListSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/MapSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/RawSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/ResultSetBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/RowTimestamps.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/ScalarFunctionSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/Selectable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/Selection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/SelectionColumnMapping.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/SelectionColumns.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/Selector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/SelectorFactories.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/SetSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/SimpleSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/TermSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/TupleSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/UserTypeSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/selection/WritetimeOrTTLSelector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/AlterRoleStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/AuthenticationStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/AuthorizationStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/BatchStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/BatchUpdatesCollector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/Bound.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/CQL3CasRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/CreateRoleStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/DeleteStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/DescribeStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/DropRoleStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/GrantPermissionsStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/GrantRoleStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/ListPermissionsStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/ListRolesStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/ListUsersStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/ModificationStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/PermissionsManagementStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/PropertyDefinitions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/QualifiedStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/RequestValidations.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/RevokePermissionsStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/RevokeRoleStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/RoleManagementStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/SelectStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/SingleTableUpdatesCollector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/StatementType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/TruncateStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/UpdateStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/UpdatesCollector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/UseStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/AlterKeyspaceStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/AlterSchemaStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/AlterTableStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/AlterTypeStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/AlterViewStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/CreateAggregateStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/CreateFunctionStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/CreateIndexStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/CreateKeyspaceStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/CreateTableStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/CreateTriggerStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/CreateTypeStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/CreateViewStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/DropAggregateStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/DropFunctionStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/DropIndexStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/DropKeyspaceStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/DropTableStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/DropTriggerStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/DropTypeStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/DropViewStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/IndexAttributes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/IndexTarget.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/KeyspaceAttributes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/cql3/statements/schema/TableAttributes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/AbstractArrayClusteringPrefix.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/AbstractBufferClusteringPrefix.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/AbstractCompactionController.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/AbstractOnHeapClusteringPrefix.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/AbstractReadCommandBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/AbstractReadQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ArrayClustering.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ArrayClusteringBound.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ArrayClusteringBoundOrBoundary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ArrayClusteringBoundary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/BufferClustering.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/BufferClusteringBound.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/BufferClusteringBoundOrBoundary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/BufferClusteringBoundary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/BufferDecoratedKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/CBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/CachedHashDecoratedKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/CassandraKeyspaceWriteHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/CassandraTableWriteHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/CassandraWriteContext.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ClockAndCount.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/Clusterable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/Clustering.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ClusteringBound.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ClusteringBoundOrBoundary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ClusteringBoundary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ClusteringComparator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ClusteringPrefix.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStoreMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/Columns.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ConsistencyLevel.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/CounterMutation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/CounterMutationVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/DataRange.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/DecoratedKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/DeletionInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/DeletionPurger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/DeletionTime.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/Digest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/Directories.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/DisallowedDirectories.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/DisallowedDirectoriesMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/DiskBoundaries.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/DiskBoundaryManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/EmptyIterators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ExpirationDateOverflowHandling.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/IMutation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/Keyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/KeyspaceNotDefinedException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/KeyspaceWriteHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/LivenessInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/MessageParams.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/MultiCBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/MutableDeletionInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/Mutation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/MutationExceededMaxSizeException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/MutationVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/NativeClustering.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/NativeDecoratedKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/PartitionPosition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/PartitionRangeReadCommand.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/PartitionRangeReadQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/PreHashedDecoratedKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/RangeTombstone.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/RangeTombstoneList.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ReadCommand.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ReadCommandVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ReadExecutionController.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ReadQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ReadRepairVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/ReadResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/RegularAndStaticColumns.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/RejectException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/RepairedDataInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SchemaCQLHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SerializationHeader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SimpleBuilders.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SinglePartitionReadCommand.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SinglePartitionReadQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SizeEstimatesRecorder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/Slice.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/Slices.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SnapshotCommand.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SnapshotDetailsTabularData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/StorageHook.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator41.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/TableWriteHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/TruncateRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/TruncateResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/TruncateVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/TypeSizes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/UnfilteredDeserializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/UnfilteredValidation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/WriteContext.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/WriteType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/aggregation/AggregationSpecification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/aggregation/GroupMaker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/aggregation/GroupingState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/AbstractCommitLogSegmentManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/AbstractCommitLogService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/BatchCommitLogService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogArchiver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogDescriptor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogPosition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReadHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReplayer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogSegment.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogSegmentManagerCDC.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogSegmentManagerStandard.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogSegmentReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/CompressedSegment.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/EncryptedFileSegmentInputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/EncryptedSegment.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/FileDirectSegment.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/GroupCommitLogService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/IntervalSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/MemoryMappedSegment.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/commitlog/PeriodicCommitLogService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/AbstractCompactionStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/AbstractCompactionTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/AbstractStrategyHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/ActiveCompactions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/ActiveCompactionsTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionController.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionHistoryTabularData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionInterruptedException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManagerMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionStrategyHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionStrategyManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/CompactionTasks.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategyOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/LeveledGenerations.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/OperationType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/PendingRepairHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/PendingRepairManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/SSTableSplitter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/SingleSSTableLCSTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategyOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionController.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategyOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/Upgrader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/writers/CompactionAwareWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/writers/DefaultCompactionWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/writers/MajorLeveledCompactionWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/writers/MaxSSTableSizeWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/compaction/writers/SplittingSizeTieredCompactionWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/context/CounterContext.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/AbstractClusteringIndexFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/ClusteringIndexFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/ClusteringIndexNamesFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/ClusteringIndexSliceFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/ColumnFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/ColumnSubselection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/DataLimits.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/LocalReadSizeTooLargeException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/RowFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/filter/TombstoneOverwhelmingException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/EnableFlag.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/Guardrail.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/GuardrailEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/GuardrailViolatedException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/Guardrails.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/GuardrailsConfig.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/GuardrailsConfigProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/GuardrailsDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/GuardrailsMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/MaxThreshold.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/MinThreshold.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/PercentageThreshold.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/Predicates.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/Threshold.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/guardrails/Values.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/Helpers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/ILifecycleTransaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleNewTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleTransaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/LogAwareFileLister.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/LogFile.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/LogRecord.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/LogReplica.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/LogReplicaSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/SSTableIntervalTree.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/SSTableSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/Tracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/View.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/lifecycle/WrappedLifecycleTransaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/AbstractCompositeType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/AbstractTimeUUIDType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/AbstractType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/AsciiType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/BooleanType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ByteArrayAccessor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ByteArrayObjectFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ByteBufferAccessor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ByteBufferObjectFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ByteType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/BytesType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/CollectionType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/CompositeType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/CounterColumnType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/DateType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/DecimalType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/DoubleType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/DurationType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/DynamicCompositeType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/EmptyType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/FloatType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/FrozenType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/InetAddressType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/Int32Type.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/IntegerType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/LegacyTimeUUIDType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/LexicalUUIDType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ListType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/LongType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/MapType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/NumberType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/PartitionerDefinedOrder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ReversedType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/SetType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ShortType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/SimpleDateType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/StringType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/TemporalType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/TimeType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/TimeUUIDType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/TimestampType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/TupleType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/TypeParser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/UTF8Type.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/UUIDType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/UserType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ValueAccessor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/marshal/ValueComparators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/AbstractAllocatorMemtable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/AbstractMemtable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/AbstractMemtableWithCommitlog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/AbstractShardedMemtable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/Flushing.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/Memtable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/ShardBoundaries.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/ShardedMemtableConfigMXBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/ShardedSkipListMemtable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/SkipListMemtable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/SkipListMemtableFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/memtable/TrieMemtable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/monitoring/Monitorable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/monitoring/MonitorableImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/monitoring/MonitoringState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/monitoring/MonitoringTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/AbstractBTreePartition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/AbstractUnfilteredPartitionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/AtomicBTreePartition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/BTreePartitionData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/BTreePartitionUpdater.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/BasePartitionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/CachedBTreePartition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/CachedPartition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/FilteredPartition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/ImmutableBTreePartition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/Partition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/PartitionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/PartitionIterators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/PartitionStatisticsCollector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/PartitionUpdate.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/PurgeFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/SingletonUnfilteredPartitionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/UnfilteredPartitionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/partitions/UnfilteredPartitionIterators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/repair/CassandraKeyspaceRepairManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/repair/CassandraTableRepairManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/repair/CassandraValidationIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/AbstractCell.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/AbstractRangeTombstoneMarker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/AbstractRow.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/AbstractUnfilteredRowIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/ArrayCell.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/ArtificialBoundMarker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/BTreeRow.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/BaseRowIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/BufferCell.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/Cell.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/CellPath.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/Cells.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/ColumnData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/ColumnMetadataVersionComparator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/ComplexColumnData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/CounterCells.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/DeserializationHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/EncodingStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/LazilyInitializedUnfilteredRowIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/NativeCell.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/PartitionSerializationException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/RangeTombstoneBoundMarker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/RangeTombstoneBoundaryMarker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/RangeTombstoneMarker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/Row.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/RowAndDeletionMergeIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/RowDiffListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/RowIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/RowIterators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/Rows.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/SerializationHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/ThrottledUnfilteredIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/Unfiltered.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredRowIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredRowIteratorSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredRowIteratorWithLowerBound.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredRowIterators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredSource.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/WithOnlyQueriedData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/rows/WrappingUnfilteredRowIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraCompressedStreamReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraCompressedStreamWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraIncomingFile.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraOutgoingFile.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamHeader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamReceiver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/ComponentContext.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/ComponentManifest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CompressedInputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/CompressionInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/IStreamReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/streaming/package-info.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/BaseIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/BasePartitions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/BaseRows.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/DuplicateRowChecker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/EmptyPartitionsDiscarder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/Filter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/FilteredPartitions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/FilteredRows.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/MoreContents.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/MorePartitions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/MoreRows.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/RTBoundCloser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/RTBoundValidator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/Stack.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/StoppingTransformation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/Transformation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/UnfilteredPartitions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/transform/UnfilteredRows.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/CollectionMergeTrie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/InMemoryReadTrie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/InMemoryTrie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/MergeTrie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/SingletonTrie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/SlicedTrie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/Trie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/TrieDumper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/TrieEntriesIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/TrieEntriesWalker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/TriePathReconstructor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/tries/TrieValuesIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/view/TableViews.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/view/View.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/view/ViewBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/view/ViewBuilderTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/view/ViewManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/view/ViewUpdateGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/view/ViewUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/AbstractMutableVirtualTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/AbstractVirtualTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/BatchMetricsTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/CQLMetricsTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/CachesTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/ClientsTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/CredentialsCacheKeysTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/GossipInfoTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/InternodeInboundTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/InternodeOutboundTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/JmxPermissionsCacheKeysTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/LocalRepairTables.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/LogMessagesTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/NetworkPermissionsCacheKeysTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/PendingHintsTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/PermissionsCacheKeysTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/QueriesTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/RolesCacheKeysTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/SSTableTasksTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/SettingsTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/SimpleDataSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/StreamingVirtualTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/SystemPropertiesTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/SystemViewsKeyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/TableMetricTables.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/ThreadPoolsTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/VirtualKeyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/VirtualKeyspaceRegistry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/VirtualMutation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/VirtualSchemaKeyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/db/virtual/VirtualTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/AbstractBounds.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/BootStrapper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/BootstrapDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/BootstrapEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/Bounds.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/ByteOrderedPartitioner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/ComparableObjectToken.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/Datacenters.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/ExcludingBounds.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/IPartitioner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/IPartitionerDependentSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/IncludingExcludingBounds.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/LocalPartitioner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/Murmur3Partitioner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/OrderPreservingPartitioner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/RandomPartitioner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/Range.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/RangeFetchMapCalculator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/RingPosition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/Splitter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/StreamStateStore.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/Token.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/NoReplicationTokenAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/OfflineTokenAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/ReplicationAwareTokenAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/ReplicationStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocatorBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocatorDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocatorEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocatorFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/diag/DiagnosticEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventPersistence.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventServiceMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/diag/LastEventIdBroadcaster.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/diag/LastEventIdBroadcasterMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/diag/store/DiagnosticEventMemoryStore.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/diag/store/DiagnosticEventStore.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/AlreadyExistsException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/AuthenticationException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/CDCWriteException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/CasWriteTimeoutException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/CasWriteUnknownResultException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/CassandraException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/ChecksumMismatchException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/ConfigurationException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/ExceptionCode.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/FunctionExecutionException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/IncompatibleSchemaException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/InvalidRequestException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/IsBootstrappingException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/OperationExecutionException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/OverloadedException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/PreparedQueryNotFoundException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/QueryCancelledException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/ReadAbortException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/ReadFailureException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/ReadSizeAbortException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/ReadTimeoutException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/RepairException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/RequestExecutionException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/RequestFailureException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/RequestFailureReason.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/RequestTimeoutException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/RequestValidationException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/StartupException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/SyntaxException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/TombstoneAbortException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/TransportException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/TruncateException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/UnauthorizedException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/UnavailableException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/UnknownColumnException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/UnknownIndexException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/UnknownTableException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/UnrecoverableIllegalStateException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/WriteFailureException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/exceptions/WriteTimeoutException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/fql/FullQueryLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/fql/FullQueryLoggerOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/fql/FullQueryLoggerOptionsCompositeData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/ApplicationState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/EndpointState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/FailureDetectorMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossipDigest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossipDigestAck.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossipDigestAck2.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossipDigestAck2VerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossipDigestAckVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossipDigestSyn.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossipShutdownVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossipVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/Gossiper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossiperDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossiperEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/GossiperMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/HeartBeatState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/IEndpointStateChangeSubscriber.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/IFailureDetectionEventListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/IFailureDetector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/TokenSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/VersionGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/gms/VersionedValue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/ColumnFamilySplit.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/ConfigHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/HadoopCompat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/ReporterWrapper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlBulkOutputFormat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlBulkRecordWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlClientHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlConfigHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlInputFormat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlOutputFormat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlRecordReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlRecordWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hadoop/package-info.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/ChecksumMismatchException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/ChecksummedDataInput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/CompressedChecksummedDataInput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/CompressedHintsWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/EncryptedChecksummedDataInput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/EncryptedHintsWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/Hint.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsBuffer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsBufferPool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsCatalog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsCleanupTrigger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsDescriptor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsDispatchTrigger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsDispatcher.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsServiceDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsServiceEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsServiceMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsStore.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsWriteExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/HintsWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/InputPosition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/PendingHintsInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/SerializableHintMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/hints/package-info.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/Index.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/IndexNotAvailableException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/IndexRegistry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/SecondaryIndexBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/TargetParser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/CassandraIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/CassandraIndexFunctions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/CassandraIndexSearcher.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/CollatedViewIndexBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/IndexEntry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/composites/ClusteringColumnIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/composites/CollectionEntryIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/composites/CollectionKeyIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/composites/CollectionKeyIndexBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/composites/CollectionValueIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/composites/CompositesSearcher.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/composites/PartitionKeyIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/composites/RegularColumnIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/keys/KeysIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/internal/keys/KeysSearcher.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/SASIIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/SASIIndexBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/SSTableIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/Term.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/TermIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/AbstractAnalyzer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/DelimiterAnalyzer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/DelimiterTokenizingOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/NoOpAnalyzer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/NonTokenizingAnalyzer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/NonTokenizingOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/StandardAnalyzer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/StandardTokenizerImpl.jflex
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/StandardTokenizerInterface.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/StandardTokenizerOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/BasicResultFilters.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/FilterPipelineBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/FilterPipelineExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/FilterPipelineTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/StemmerFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/StemmingFilters.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/StopWordFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/StopWordFilters.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/conf/ColumnIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/conf/DataTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/conf/IndexMode.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/conf/view/PrefixTermTree.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/conf/view/RangeTermTree.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/conf/view/TermTree.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/conf/view/View.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/AbstractTokenTreeBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/Descriptor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/DynamicTokenTreeBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/OnDiskBlock.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/OnDiskIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/OnDiskIndexBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/PerSSTableIndexWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/StaticTokenTreeBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/Token.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/TokenTree.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/disk/TokenTreeBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/exceptions/TimeQuotaExceededException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/memory/IndexMemtable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/memory/KeyRangeIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/memory/MemIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/memory/SkipListMemIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/memory/TrieMemIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/plan/Expression.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/plan/Operation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/plan/QueryController.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/plan/QueryPlan.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/sa/ByteTerm.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/sa/CharTerm.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/sa/IndexedTerm.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/sa/IntegralSA.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/sa/SA.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/sa/SuffixSA.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/sa/Term.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/sa/TermIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/AbstractIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/CombinedTerm.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/CombinedTermIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/CombinedValue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/MappedBuffer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/OnDiskIndexIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/RangeIntersectionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/RangeIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/RangeUnionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/TypeUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/trie/AbstractPatriciaTrie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/trie/AbstractTrie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/trie/Cursor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/trie/KeyAnalyzer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/trie/PatriciaTrie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/trie/Trie.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/sasi/utils/trie/Tries.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/transactions/CleanupTransaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/transactions/CompactionTransaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/transactions/IndexTransaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/index/transactions/UpdateTransaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/FSDiskFullWriteError.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/FSError.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/FSErrorHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/FSNoDiskAvailableForWriteError.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/FSReadError.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/FSWriteError.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/IGenericSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/ISerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/IVersionedAsymmetricSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/IVersionedSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/BufferType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/CompressedSequentialWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/CompressionMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/CorruptBlockException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/DeflateCompressor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/ICompressor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/LZ4Compressor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/NoopCompressor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/SnappyCompressor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/compress/ZstdCompressor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/AbstractMetricsProviders.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/AbstractRowIndexEntry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/AbstractSSTableIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/AbstractSSTableSimpleWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/CQLSSTableWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/Component.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/CorruptSSTableException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/Descriptor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/Downsampling.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/EmptySSTableScanner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/GaugeProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/IOOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/ISSTableScanner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/IScrubber.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/IVerifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/IndexInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/KeyIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/KeyReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/MetricsProviders.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/RangeAwareSSTableWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/ReducingKeyIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableFlushObserver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableHeaderFix.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableId.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableIdFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableIdentityIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableMultiWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableReadsListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableRewriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableSimpleIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableSimpleUnsortedWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableSimpleWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableTxnWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SSTableZeroCopyWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SequenceBasedSSTableId.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SimpleGaugeProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/SimpleSSTableMultiWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/UUIDBasedSSTableId.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/filter/BloomFilterMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/filter/BloomFilterTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/AbstractSSTableFormat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/CompressionInfoComponent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/DataComponent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/FilterComponent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/IndexComponent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableFormat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReaderLoadingBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReaderWithFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/SortedTablePartitionWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/SortedTableScrubber.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/SortedTableVerifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/SortedTableWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/StatsComponent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/TOCComponent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/Version.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/VersionAndType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigFormat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigFormatPartitionWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigSSTableReaderLoadingBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableKeyReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableScanner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableScrubber.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableVerifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/IndexState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/IndexSummaryComponent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/RowIndexEntry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/SSTableIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/format/big/SSTableReversedIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/indexsummary/IndexSummary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/indexsummary/IndexSummaryBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/indexsummary/IndexSummaryManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/indexsummary/IndexSummaryManagerMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/indexsummary/IndexSummaryMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/indexsummary/IndexSummaryRedistribution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/indexsummary/IndexSummarySupport.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/keycache/KeyCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/keycache/KeyCacheMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/keycache/KeyCacheSupport.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/metadata/CompactionMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/metadata/IMetadataComponentSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/metadata/IMetadataSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/metadata/MetadataCollector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/metadata/MetadataComponent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/metadata/MetadataSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/metadata/MetadataType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/metadata/StatsMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/sstable/metadata/ValidationMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/AbstractReaderFileProxy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/BufferManagingRebufferer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/BufferedDataOutputStreamPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/BytesReadTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/ChannelProxy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/CheckedFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/ChecksumWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/ChecksummedRandomAccessReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/ChecksummedRebufferer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/ChecksummedSequentialWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/ChunkReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/CompressedChunkReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/CorruptFileException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/DataInputBuffer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/DataInputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/DataIntegrityMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/DataOutputBuffer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/DataOutputBufferFixed.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/DataOutputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/DataOutputStreamPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/DataPosition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/DiskOptimizationStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/EmptyRebufferer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/File.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/FileDataInput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/FileHandle.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/FileInputStreamPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/FileOutputStreamPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/FileReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/FileSegmentInputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/FileStoreUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/FileWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/LengthAvailableInputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/LimitingRebufferer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/Memory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/MemoryInputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/MemoryOutputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/MmapRebufferer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/MmappedRegions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/MmappedRegionsCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/NIODataInputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/PathUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/RandomAccessReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/ReadableMemory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/ReaderFileProxy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/Rebufferer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/RebuffererFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/RebufferingInputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/RewindableDataInput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/SafeMemory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/SafeMemoryWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/SequentialWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/SequentialWriterOption.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/SimpleCachedBufferPool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/SimpleChunkReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/SpinningDiskOptimizationStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/SsdDiskOptimizationStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/TeeDataInputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/ThreadLocalByteBufferHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/TrackedDataInputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/TrackedInputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/UnbufferedDataOutputStreamPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/WrappedDataOutputStreamPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/io/util/WrappingRebufferer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/AbstractEndpointSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/AbstractNetworkTopologySnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/AbstractReplicaCollection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/AbstractReplicationStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/AlibabaCloudSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/CloudstackSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/DynamicEndpointSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/DynamicEndpointSnitchMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/Ec2MultiRegionSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/Ec2Snitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/EndpointSnitchInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/EndpointSnitchInfoMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/Endpoints.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/EndpointsByRange.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/EndpointsByReplica.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/EndpointsForRange.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/EndpointsForToken.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/GoogleCloudSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/GossipingPropertyFileSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/IEndpointSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/InOurDc.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/InetAddressAndPort.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/LocalStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/NetworkTopologyStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/PendingRangeMaps.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/RackInferringSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/RangesAtEndpoint.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/RangesByEndpoint.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/ReconnectableSnitchHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/Replica.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/ReplicaCollection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/ReplicaLayout.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/ReplicaMultimap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/ReplicaPlan.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/ReplicaPlans.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/Replicas.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/ReplicationFactor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/SeedProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/SimpleSeedProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/SimpleSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/SimpleStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/SnitchProperties.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/SystemReplicas.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/TokenMetadataDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/locator/TokenMetadataEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/BatchMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/BufferPoolMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/CASClientRequestMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/CASClientWriteRequestMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/CQLMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/CacheMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/CassandraMetricsRegistry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ChunkCacheMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ClearableHistogram.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ClientMessageSizeMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ClientMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ClientRequestMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ClientRequestSizeMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ClientRequestsMetricsHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ClientWriteRequestMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/CommitLogMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/CompactionMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/DecayingEstimatedHistogramReservoir.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/DefaultNameFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/DenylistMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/DroppedMessageMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/FrequencySampler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/HintedHandoffMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/HintsServiceMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/InternodeInboundMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/InternodeOutboundMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/KeyspaceMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/LatencyMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/MaxSampler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/MessagingMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/MetricNameFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/MinMaxAvgMetric.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/PaxosMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ReadRepairMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/RepairMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/RestorableMeter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/Sampler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/SamplingManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ScalingReservoir.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/SnapshottingReservoir.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/SnapshottingTimer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/StorageMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/StreamingMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/TableMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ThreadPoolMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/TopPartitionTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/TrieMemtableMetricsView.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/metrics/ViewWriteMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/AbstractMessageHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/AcceptVersions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/AsyncChannelOutputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/AsyncChannelPromise.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/AsyncMessageOutputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/AsyncOneResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/AsyncStreamingInputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/AsyncStreamingOutputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/BufferPoolAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/ChunkedInputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/ConnectionCategory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/ConnectionType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/Crc.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/CustomParamsSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/EndpointMessagingVersions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/ForwardingInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameDecoder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameDecoderCrc.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameDecoderLZ4.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameDecoderLegacy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameDecoderLegacyLZ4.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameDecoderUnprotected.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameDecoderWith8bHeader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameEncoder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameEncoderCrc.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameEncoderLZ4.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameEncoderLegacy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameEncoderLegacyLZ4.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FrameEncoderUnprotected.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FutureDelegate.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/FutureResult.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/GlobalBufferPoolAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/HandshakeProtocol.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/IVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InboundConnectionSettings.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InboundCounters.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InboundMessageCallbacks.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InboundMessageHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InboundMessageHandlers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InboundSink.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InboundSockets.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InternodeConnectionUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/InvalidSerializedSizeException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/LatencyConsumer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/LatencySubscribers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/LegacyFlag.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/LegacyLZ4Constants.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/LocalBufferPoolAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/ManyToOneConcurrentLinkedQueue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/Message.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/MessageFlag.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/MessagingService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/MessagingServiceMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/MessagingServiceMBeanImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/NoPayload.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/NoSizeEstimator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/OutboundConnectionInitiator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/OutboundConnectionSettings.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/OutboundConnections.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/OutboundDebugCallbacks.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/OutboundMessageCallbacks.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/OutboundMessageQueue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/OutboundSink.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/ParamType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/PingRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/PingVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/PrunableArrayQueue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/RequestCallback.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/RequestCallbackWithFailure.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/RequestCallbacks.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/ResourceLimits.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/ResponseVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/ShareableBytes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/SharedDefaultFileRegion.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/SocketFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/StartupClusterConnectivityChecker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/net/Verb.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/INotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/INotificationConsumer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/InitialSSTableAddedNotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/MemtableDiscardedNotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/MemtableRenewedNotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/MemtableSwitchedNotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/SSTableAddedNotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/SSTableDeletingNotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/SSTableListChangedNotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/SSTableMetadataChanged.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/SSTableRepairStatusChanged.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/notifications/TruncationNotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/AbstractRepairTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/AsymmetricRemoteSyncTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/CommonRange.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/CompletableRemoteSyncTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/CoordinatedRepairResult.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/IncrementalRepairTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/KeyspaceRepairManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/LocalSyncTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/NoSuchRepairSessionException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/NormalRepairTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/PreviewRepairConflictWithIncrementalRepairException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/PreviewRepairTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairJob.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairJobDesc.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairNotifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairParallelism.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairResult.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairSession.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairSessionResult.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/RepairTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/SnapshotTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/SomeRepairFailedException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/StreamingRepairTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/SymmetricRemoteSyncTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/SyncNodePair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/SyncStat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/SyncTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/TableRepairManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/TreeResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/ValidationManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/ValidationPartitionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/ValidationTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/Validator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/asymmetric/DifferenceHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/asymmetric/HostDifferences.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/asymmetric/IncomingRepairStreamTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/asymmetric/PreferedNodeFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/asymmetric/RangeDenormalizer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/asymmetric/RangeMap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/asymmetric/ReduceHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/asymmetric/StreamFromOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/ConsistentSession.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSessions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSession.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessionInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/RepairedState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/SyncStatSummary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/admin/CleanupSummary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/admin/PendingStat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/admin/PendingStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/admin/RepairStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/consistent/admin/SchemaArgsParser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/CleanupMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/FailSession.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/FinalizeCommit.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/FinalizePromise.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/FinalizePropose.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/PrepareConsistentRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/PrepareConsistentResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/PrepareMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/RepairMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/RepairOption.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/SnapshotMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/StatusRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/StatusResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/SyncRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/SyncResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/ValidationRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/messages/ValidationResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/state/AbstractCompletable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/state/AbstractState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/state/Completable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/state/CoordinatorState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/state/JobState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/state/ParticipateState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/state/SessionState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/state/State.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/repair/state/ValidationState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/CQLTypeParser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/CachingParams.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/ColumnMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/CompactionParams.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/CompressionParams.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/DefaultSchemaUpdateHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/DefaultSchemaUpdateHandlerFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/Diff.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/Difference.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/DistributedSchema.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/DroppedColumn.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/IndexMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/Indexes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/KeyspaceMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/KeyspaceParams.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/Keyspaces.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/MemtableParams.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/MigrationCoordinator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/OfflineSchemaUpdateHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/PartitionDenylist.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/ReplicationParams.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/Schema.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaAnnouncementDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaAnnouncementEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaChangeListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaChangeNotifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaConstants.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspaceTables.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaMutationsSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaPullVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaPushVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaTransformation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaTransformations.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaUpdateHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaUpdateHandlerFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaUpdateHandlerFactoryProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SchemaVersionVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/SystemDistributedKeyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/TableId.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/TableMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/TableMetadataRef.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/TableMetadataRefCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/TableParams.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/Tables.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/TriggerMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/Triggers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/Types.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/UserFunctions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/ViewMetadata.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/schema/Views.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/AbstractSslContextFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/CipherFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/DefaultSslContextFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/DisableSslContextFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/EncryptionContext.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/EncryptionUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/FileBasedSslContextFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/ISslContextFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/JKSKeyProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/KeyProvider.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/PEMBasedSslContextFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/PEMReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/SSLFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/SecurityThreadGroup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/security/ThreadAwareSecurityManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/AbstractMapSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/AbstractTextSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/AbstractTypeSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/AsciiSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/BooleanSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/ByteSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/BytesSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/CollectionSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/CounterSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/DecimalSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/DoubleSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/DurationSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/EmptySerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/FloatSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/InetAddressSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/Int32Serializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/IntegerSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/ListSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/LongSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/MapSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/MarshalException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/SetSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/ShortSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/SimpleDateSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/TimeSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/TimestampSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/TupleSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/TypeSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/UTF8Serializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/UUIDSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/serializers/UserTypeSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/AbstractWriteResponseHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/ActiveRepairService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/ActiveRepairServiceMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/BatchlogResponseHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/CASRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/CacheService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/CacheServiceMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/ClientState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/ClientWarn.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/DataResurrectionCheck.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/DatacenterSyncWriteResponseHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/DatacenterWriteResponseHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/DefaultFSErrorHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/EchoVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/EmbeddedCassandraService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/FailureRecordingCallback.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/FileSystemOwnershipCheck.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/GCInspector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/GCInspectorMXBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/IEndpointLifecycleSubscriber.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/LoadBroadcaster.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/NativeAccessMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/NativeTransportService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/PendingRangeCalculatorService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/PendingRangeCalculatorServiceDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/PendingRangeCalculatorServiceEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/QueryState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/SSTablesGlobalTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/SSTablesVersionsInUseChangeNotification.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/SnapshotVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/StartupCheck.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/StartupChecks.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/StorageProxy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/StorageProxyMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/StorageService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/StorageServiceMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/TokenRange.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/TruncateResponseHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/WriteResponseHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/disk/usage/DiskUsageBroadcaster.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/disk/usage/DiskUsageMonitor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/disk/usage/DiskUsageState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/pager/AbstractQueryPager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/pager/AggregationQueryPager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/pager/MultiPartitionPager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/pager/PagingState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/pager/PartitionRangeQueryPager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/pager/QueryPager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/pager/SinglePartitionPager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/AbstractPaxosRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/Ballot.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/BallotGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/Commit.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/ContentionStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/Paxos.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosCommit.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosCommitAndPrepare.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosOperationLock.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosPrepare.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosPrepareRefresh.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosPropose.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosRepairHistory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosRequestCallback.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PaxosState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/PrepareResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/TablePaxosRepairHistory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosCleanup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosCleanupComplete.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosCleanupException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosCleanupHistory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosCleanupLocalCoordinator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosCleanupRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosCleanupResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosCleanupSession.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosFinishPrepareCleanup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosStartPrepareCleanup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/cleanup/PaxosTableRepairs.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/uncommitted/PaxosBallotTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/uncommitted/PaxosKeyState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/uncommitted/PaxosRows.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/uncommitted/PaxosStateTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/uncommitted/PaxosUncommittedIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/uncommitted/PaxosUncommittedTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/uncommitted/UncommittedDataFile.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/uncommitted/UncommittedPaxosKey.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/uncommitted/UncommittedTableData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/v1/AbstractPaxosCallback.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/v1/PrepareCallback.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/v1/PrepareVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/v1/ProposeCallback.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/paxos/v1/ProposeVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/AbstractReadExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/AlwaysSpeculativeRetryPolicy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/DataResolver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/DigestResolver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/FixedSpeculativeRetryPolicy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/HybridSpeculativeRetryPolicy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/NeverSpeculativeRetryPolicy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/PercentileSpeculativeRetryPolicy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/ReadCallback.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/ReplicaFilteringProtection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/ResponseResolver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/ShortReadPartitionsProtection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/ShortReadProtection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/ShortReadRowsProtection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/SpeculativeRetryPolicy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/range/RangeCommandIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/range/RangeCommands.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/range/ReplicaPlanIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/range/ReplicaPlanMerger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/range/SingleRangeResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/AbstractReadRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/BlockingPartitionRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/BlockingReadRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/BlockingReadRepairs.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/NoopReadRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/PartitionIteratorMergeListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/PartitionRepairEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/ReadOnlyReadRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/ReadRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/ReadRepairDiagnostics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/ReadRepairEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/ReadRepairStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/RepairedDataTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/RepairedDataVerifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/repair/RowIteratorMergeListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/thresholds/CoordinatorWarnings.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/thresholds/WarnAbortCounter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/thresholds/WarningContext.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/reads/thresholds/WarningsSnapshot.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/snapshot/SnapshotLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/snapshot/SnapshotManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/snapshot/SnapshotManifest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/service/snapshot/TableSnapshot.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/IncomingStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/OutgoingStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/PreviewKind.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/ProgressInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/ReplicationDoneVerbHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/SessionInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/SessionSummary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamConnectionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamCoordinator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamDeserializingTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamEventHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamHook.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamManagerMBean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamOperation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamPlan.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamReceiveException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamReceiveTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamReceiver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamRequest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamResultFuture.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamSummary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamTransferTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamingChannel.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamingDataInputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamingDataOutputPlus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamingDataOutputPlusFixed.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/StreamingState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/TableStreamManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingChannel.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingConnectionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/async/StreamCompressionSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/async/StreamingMultiplexedChannel.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/async/package-info.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/compress/StreamCompressionInputStream.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/management/ProgressInfoCompositeData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/management/SessionCompleteEventCompositeData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/management/SessionInfoCompositeData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/management/StreamEventJMXNotifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/management/StreamStateCompositeData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/management/StreamSummaryCompositeData.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/CompleteMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/IncomingStreamMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/KeepAliveMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/OutgoingStreamMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/PrepareAckMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/PrepareSynAckMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/PrepareSynMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/ReceivedMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/SessionFailedMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/StreamInitMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/StreamMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/streaming/messages/StreamMessageHeader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/AbstractJmxClient.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/AuditLogViewer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/BootstrapMonitor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/BulkLoadConnectionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/BulkLoadException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/BulkLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/GenerateTokens.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/GetVersion.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/HashPassword.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/INodeProbeFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/JMXTool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/JsonTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/LoaderOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/NodeProbe.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/NodeTool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/Output.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/ReloadSslCertificates.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/RepairRunner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/SSTableExpiredBlockers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/SSTableExport.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/SSTableLevelResetter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/SSTableMetadataViewer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/SSTableOfflineRelevel.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/SSTableRepairedAtSetter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/StandaloneSSTableUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/StandaloneScrubber.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/StandaloneSplitter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/StandaloneUpgrader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/StandaloneVerifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/Util.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Assassinate.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/BootstrapResume.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/CfHistograms.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/CfStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Cleanup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ClearSnapshot.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ClientStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Compact.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/CompactionHistory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/CompactionStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DataPaths.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Decommission.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DescribeCluster.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DescribeRing.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DisableAuditLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DisableAutoCompaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DisableBackup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DisableBinary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DisableFullQueryLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DisableGossip.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DisableHandoff.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DisableHintsForDC.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/DisableOldProtocolVersions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Drain.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/EnableAuditLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/EnableAutoCompaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/EnableBackup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/EnableBinary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/EnableFullQueryLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/EnableGossip.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/EnableHandoff.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/EnableHintsForDC.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/EnableOldProtocolVersions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/FailureDetectorInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Flush.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ForceCompact.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GarbageCollect.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GcStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetAuditLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetAuthCacheConfig.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetBatchlogReplayTrottle.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetColumnIndexSize.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetCompactionThreshold.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetCompactionThroughput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetConcurrency.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetConcurrentCompactors.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetConcurrentViewBuilders.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetDefaultKeyspaceRF.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetEndpoints.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetFullQueryLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetInterDCStreamThroughput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetLoggingLevels.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetMaxHintWindow.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetSSTables.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetSeeds.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetSnapshotThrottle.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetStreamThroughput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetTimeout.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GetTraceProbability.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/GossipInfo.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/HostStat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/HostStatWithPort.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Import.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/InvalidateCounterCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/InvalidateCredentialsCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/InvalidateJmxPermissionsCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/InvalidateKeyCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/InvalidateNetworkPermissionsCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/InvalidatePermissionsCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/InvalidateRolesCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/InvalidateRowCache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Join.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ListPendingHints.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ListSnapshots.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Move.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/NetStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/PauseHandoff.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ProfileLoad.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ProxyHistograms.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/RangeKeySample.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Rebuild.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/RebuildIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/RecompressSSTables.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Refresh.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/RefreshSizeEstimates.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ReloadLocalSchema.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ReloadSeeds.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ReloadTriggers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/RelocateSSTables.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/RemoveNode.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Repair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/RepairAdmin.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ReplayBatchlog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ResetFullQueryLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ResetLocalSchema.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ResumeHandoff.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Ring.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Scrub.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetAuthCacheConfig.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetBatchlogReplayThrottle.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetCacheCapacity.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetCacheKeysToSave.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetColumnIndexSize.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetCompactionThreshold.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetCompactionThroughput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetConcurrency.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetConcurrentCompactors.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetConcurrentViewBuilders.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetDefaultKeyspaceRF.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetHintedHandoffThrottleInKB.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetHostStat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetHostStatWithPort.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetInterDCStreamThroughput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetLoggingLevel.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetMaxHintWindow.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetSnapshotThrottle.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetStreamThroughput.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetTimeout.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/SetTraceProbability.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Sjk.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Snapshot.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Status.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/StatusAutoCompaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/StatusBackup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/StatusBinary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/StatusGossip.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/StatusHandoff.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Stop.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/StopDaemon.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/TableHistograms.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/TableStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/TopPartitions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/TpStats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/TruncateHints.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/UpgradeSSTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Verify.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/Version.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/ViewBuildStatus.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/formatter/TableBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/CompactionHistoryHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/CompactionHistoryPrinter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/DataPathsHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/DataPathsPrinter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/StatsHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/StatsKeyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/StatsPrinter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/StatsTable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/StatsTableComparator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/TableStatsHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/TableStatsPrinter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/TpStatsHolder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tools/nodetool/stats/TpStatsPrinter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tracing/ExpiredTraceState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tracing/TraceKeyspace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tracing/TraceState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tracing/TraceStateImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tracing/Tracing.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/tracing/TracingImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/CBCodec.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/CBUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/CQLMessageHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/Client.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ClientResourceLimits.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ClientStat.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/Compressor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ConnectedClient.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/Connection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ConnectionLimitHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ConnectionStage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/DataType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/Dispatcher.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/Envelope.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/Event.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ExceptionHandlers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/Flusher.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/InitialConnectionHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/Message.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/PipelineConfigurator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/PreV5Handlers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ProtocolException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ProtocolVersion.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ProtocolVersionTracker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/Server.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ServerConnection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/ServerError.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/SimpleClient.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/AuthChallenge.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/AuthResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/AuthSuccess.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/AuthenticateMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/BatchMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/ErrorMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/EventMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/ExecuteMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/OptionsMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/PrepareMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/QueryMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/ReadyMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/RegisterMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/ResultMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/StartupMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/SupportedMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/transport/messages/UnsupportedMessageCodec.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/triggers/CustomClassLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/triggers/ITrigger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/triggers/TriggerExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/AbstractIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Architecture.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/AsymmetricOrdering.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/BiLongAccumulator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/BiMultiValMap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/BloomCalculations.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/BloomFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/BloomFilterSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/BooleanSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/BreaksJMX.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/BulkIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/ByteArrayUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/ByteBufferUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/CassandraVersion.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/ChecksumType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Clock.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Closeable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/CloseableIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/CollectionSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Collectors3.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Comparables.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/ConcurrentBiMap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/CounterId.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/DefaultValue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/DiagnosticSnapshotService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/DirectorySizeCalculator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/DynamicList.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/EstimatedHistogram.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/ExecutorUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/ExpiringMemoizingSupplier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/FBUtilities.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/FailingConsumer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/FastByteOperations.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/FilterFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/GuidGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/HeapUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Hex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/HistogramBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/IFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/IMergeIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/IndexedSearchIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Int32Serializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Int64Serializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/IntegerInterval.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Intercept.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Interval.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/IntervalTree.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Isolated.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/IteratorWithLowerBound.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/JMXServerUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/JVMStabilityInspector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/JavaUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/LazyToString.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/LockedDynamicList.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/LongAccumulator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/LongTimSort.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/MBeanWrapper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/MD5Digest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/MergeIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/MerkleTrees.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/MonotonicClock.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/MonotonicClockTranslation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/MurmurHash.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Mx4jTool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/NativeLibraryDarwin.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/NativeLibraryLinux.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/NativeLibraryWrapper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/NativeSSTableLoaderClient.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Nemesis.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/NoSpamLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/NullableSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/ObjectSizes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/OutputHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/OverlapIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Pair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/RMIServerSocketFactoryImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/RangesSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/RecomputingSupplier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/ReflectionUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/ResourceWatcher.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/SearchIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Shared.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Simulate.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/SortedBiMultiValMap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/StatusLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/SyncUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/TestRateLimiter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Throwables.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/TimeUUID.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/UUIDGen.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/UUIDSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/VoidSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/WithResources.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/Wrapped.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/WrappedBoolean.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/WrappedException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/WrappedRunnable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/binlog/BinLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/binlog/BinLogArchiver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/binlog/BinLogOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/binlog/DeletingArchiver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/binlog/ExternalArchiver.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/btree/BTree.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/btree/BTreeRemoval.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/btree/BTreeSearchIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/btree/BTreeSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/btree/FullBTreeSearchIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/btree/LeafBTreeSearchIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/btree/NodeCursor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/btree/TreeCursor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/btree/UpdateFunction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/bytecomparable/ByteComparable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/bytecomparable/ByteSource.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/bytecomparable/ByteSourceInverse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/caching/TinyThreadLocalPool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/AbstractFuture.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Accumulator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/AsyncFuture.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/AsyncPromise.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Awaitable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/BlockingQueues.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Condition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/ConditionAsConsumer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/CountDownLatch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Future.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/FutureCombiner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/ImmediateFuture.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/IntrusiveStack.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/ListenerList.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/LoadingMap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/NonBlockingRateLimiter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/NotScheduledFuture.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/OpOrder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Promise.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Ref.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/RefCounted.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Refs.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/RunnableFuture.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/SelfRefCounted.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Semaphore.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/SharedCloseable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/SharedCloseableImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/SyncFuture.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/SyncPromise.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Threads.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/Transactional.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/UncheckedInterruptedException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/WaitQueue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/WeightedQueue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/concurrent/WrappedSharedCloseable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/logging/LogbackLoggingSupport.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/logging/LoggingSupport.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/logging/LoggingSupportFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/logging/NoOpFallbackLoggingSupport.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/logging/VirtualTableAppender.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/BufferPool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/BufferPools.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/ByteBufferCloner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/Cloner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/EnsureOnHeap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/HeapCloner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/HeapPool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/MemoryUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/MemtableAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/MemtableBufferAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/MemtableCleaner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/MemtableCleanerThread.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/MemtablePool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/NativeAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/NativePool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/SlabAllocator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/memory/SlabPool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/obs/BitUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/obs/IBitSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/obs/OffHeapBitSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/progress/ProgressEvent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/progress/ProgressEventNotifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/progress/ProgressEventNotifierSupport.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/progress/ProgressEventType.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/progress/ProgressListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/progress/jmx/JMXBroadcastExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/progress/jmx/JMXNotificationProgressListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/progress/jmx/JMXProgressSupport.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/streamhist/HistogramDataConsumer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/streamhist/StreamingTombstoneHistogramBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/streamhist/TombstoneHistogram.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/src/java/org/apache/cassandra/utils/vint/VIntCoding.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/anttasks/org/apache/cassandra/anttasks/EchoEclipseProjectLibs.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/anttasks/org/apache/cassandra/anttasks/JdkProperties.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/anttasks/org/apache/cassandra/anttasks/KeepBriefBrief.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/anttasks/org/apache/cassandra/anttasks/TestHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/anttasks/org/apache/cassandra/anttasks/TestNameCheckTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/concurrent/LongOpOrderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/concurrent/LongSharedExecutorPoolTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/net/BytesInFlightController.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/net/Connection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/net/ConnectionBurnTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/net/GlobalInboundSettings.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/net/LogbackFilter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/net/MessageGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/net/MessageGenerators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/net/Reporters.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/net/Verifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/transport/BurnTestUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/transport/DriverBurnTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/transport/SimpleClientBurnTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/transport/SimpleClientPerfTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/utils/LongBTreeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/burn/org/apache/cassandra/utils/memory/LongBufferPoolTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/cassandra-pem-jks-sslcontextfactory.yaml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/cassandra-pem-sslcontextfactory-invalidconfiguration.yaml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/cassandra-pem-sslcontextfactory.yaml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/cassandra-rackdc.properties.mod
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/cassandra-sslcontextfactory-invalidconfiguration.yaml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/cassandra-sslcontextfactory.yaml
  B     /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/keystore.jks
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/logback-burntest.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/logback-dtest.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/logback-dtest_with_vtable_appender.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/logback-dtest_with_vtable_appender_invalid.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/logback-jmh.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/logback-simulator.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/logback-test.xml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/conf/trie_memtable.yaml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/data/bloom-filter/ka/foo.cql
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/Cluster.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/Constants.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/UpgradeableCluster.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/action/GossipHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/action/InstanceAction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/api/ConsistencyLevel.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/api/IClassTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/api/ICoordinator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/api/IMessage.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/api/QueryResult.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/api/QueryResults.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/api/Row.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/api/SimpleQueryResult.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/fuzz/FixedSchemaProviderConfiguration.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/fuzz/FuzzTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/fuzz/HarryHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/fuzz/InJvmSut.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/fuzz/InJvmSutBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/fuzz/QueryingNoOpChecker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/fuzz/SSTableGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/fuzz/SSTableLoadingVisitor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/fuzz/test/SSTableGeneratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/AbstractCluster.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/AbstractClusterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/ClusterIDDefiner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/Coordinator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/DelegatingInvokableInstance.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/DirectStreamingConnectionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/DistributedTestSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/FileLogAction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/INodeProvisionStrategy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/Instance.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/InstanceConfig.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/InstanceIDDefiner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/InstanceKiller.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/InstanceMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/IsolatedExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/Listen.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/MessageFilters.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/MessageImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/Query.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/RowUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/ShutdownExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/TracingUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/impl/UnsafeGossipHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/mock/nodetool/InternalNodeProbe.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/mock/nodetool/InternalNodeProbeFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/shared/Byteman.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/shared/ClusterUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/shared/RepairResult.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/shared/ShutdownException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/shared/VersionedApplicationState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/shared/WithProperties.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/AbstractEncryptionOptionsImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/AbstractNetstatsBootstrapStreaming.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/AbstractNetstatsStreaming.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/AllowAutoSnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/AlterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/AuthTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/AutoSnapshotTtlTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/BooleanTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/BootstrapBinaryDisabledTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ByteBuddyExamplesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CASAddTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CASCommonTestCases.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CASContentionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CASMultiDCTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CASTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CasCriticalSectionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CasWriteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ClearSnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ClientNetworkStopStartTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ClusterStorageUsageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CompactionDiskSpaceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/CountersTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/DataResurrectionCheckTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/DistributedRepairUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/EphemeralSnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ExecUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/FailingRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/FailingResponseDoesNotLogTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/FailingTruncationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/FailureLoggingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/FqlReplayDDLExclusionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/FrozenUDTTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/FullRepairCoordinatorFastTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/FullRepairCoordinatorNeighbourDownTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/FullRepairCoordinatorTimeoutTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/GossipSettlesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/GossipShutdownTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/GossipTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/GroupByTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/HintedHandoffAddRemoveNodesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/HintedHandoffNodetoolTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/IPMembershipTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/IncRepairAdminTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/IncRepairCoordinatorErrorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/IncRepairTruncationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/IncrementalRepairCoordinatorFastTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/IncrementalRepairCoordinatorNeighbourDownTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/IncrementalRepairCoordinatorTimeoutTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionEnforcementTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeEncryptionOptionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/InternodeErrorExclusionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/JVMDTestTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/JVMStabilityInspectorThrowableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/JavaDriverUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/LargeColumnTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/LargeMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/LegacyCASTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/MessageFiltersTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/MessageForwardingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/MetricsCountQueriesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/MetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/MigrationCoordinatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/MixedModeFuzzTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/MoveTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/MultipleDataDirectoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/NativeMixedVersionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/NativeProtocolTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/NativeTransportEncryptionOptionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/NetstatsBootstrapWithEntireSSTablesCompressionStreamingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/NetstatsBootstrapWithoutEntireSSTablesCompressionStreamingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/NetstatsRepairStreamingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/NetworkTopologyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/NodeToolEnableDisableBinaryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/NodeToolTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/OptimiseStreamsRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/OversizedMutationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PagingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PartitionDenylistTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PaxosRepair2Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PaxosRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PaxosUncommittedIndexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PrepareBatchStatementsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PreviewRepairCoordinatorFastTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PreviewRepairCoordinatorNeighbourDownTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PreviewRepairCoordinatorTimeoutTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PreviewRepairSnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/PreviewRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ProfileLoadTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/QueriesTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/QueryReplayerEndToEndTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadDigestConsistencyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadFailureTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairCollectionQueriesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairEmptyRangeTombstonesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairInQueriesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairPointQueriesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairQueryTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairRangeQueriesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairSliceQueriesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReadRepairUnrestrictedQueriesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairBoundaryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorFailingMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorFast.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorNeighbourDown.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairCoordinatorTimeout.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairDigestTrackingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairErrorsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairOperationalTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairRequestTimeoutTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReplicaFilteringProtectionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReprepareFuzzTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReprepareNewBehaviourTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReprepareOldBehaviourTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ReprepareTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ResourceLeakTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/RestartTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SSTableIdGenerationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SSTableLoaderEncryptionOptionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SSTableSkippingReadTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SchemaDisagreementTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SchemaTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SecondaryIndexCompactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SecondaryIndexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ShortReadProtectionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SimpleReadWriteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SinglePartitionReadCommandTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/SnapshotsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/StreamPrepareFailTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/StreamingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/StreamsDiskSpaceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/TableEstimatesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/TableLevelIncrementalBackupsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/TestBaseImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/TimeoutAbortTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/TombstoneWarningTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/TopPartitionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/TopologyChangeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/UnableToParseClientMessageFromBlockedSubnetTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/UnableToParseClientMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/UpdateSystemAuthAfterDCExpansionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/UpgradeSSTablesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/VirtualTableFromInternodeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/VirtualTableLogsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/cdc/ToggleCDCOnRepairEnabledTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/guardrails/GuardrailCollectionSizeOnSSTableWriteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/guardrails/GuardrailDiskUsageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/guardrails/GuardrailItemsPerCollectionOnSSTableWriteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/guardrails/GuardrailTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/AssassinateAbruptDownedNodeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/AssassinateGracefullNodeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/AssassinatedEmptyNodeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/BaseAssassinatedCase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/FailedBootstrapTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/HostReplacementAbruptDownedInstanceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/HostReplacementOfDownedClusterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/HostReplacementTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/hostreplacement/NodeCannotJoinAsHibernatingNodeWithoutReplaceAddressTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/jmx/JMXGetterCheckTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/metric/TableMetricTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/metrics/HintsServiceMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/metrics/RequestTimeoutTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/metrics/StreamingMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/repair/ForceRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ring/AutoBootstrapTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ring/BootstrapTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ring/CleanupFailureTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ring/CommunicationDuringDecommissionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ring/NodeNotInRingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ring/PendingWritesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/ring/ReadsDuringBootstrapTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/streaming/LCSStreamingKeepLevelTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/streaming/RebuildStreamingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/streaming/StreamCloseInMiddleTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/streaming/StreamingStatsDisabledTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/thresholds/AbstractClientSizeWarning.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/thresholds/CoordinatorReadSizeWarningTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/thresholds/LocalReadSizeWarningTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/thresholds/RowIndexSizeWarningTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/test/thresholds/TombstoneCountWarningTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/BatchUpgradeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStorageColumnDeleteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStorageHiddenColumnTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStorageImplicitNullInClusteringTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStoragePagingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStoragePagingWithProtocolTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStoragePagingWithProtocolV40Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactStoragePagingWithProtocolV41Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/CompactionHistorySystemTableUpgradeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/ConfigCompatabilityTestGenerate.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/DropCompactStorageNullClusteringValuesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/DropCompactStorageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/GroupByTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeAvailabilityTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeAvailabilityV30AllOneTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeAvailabilityV30OneAllTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeAvailabilityV30QuorumQuorumTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeAvailabilityV3XAllOneTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeAvailabilityV3XOneAllTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeAvailabilityV3XQuorumQuorumTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeBatchTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeConsistencyTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeConsistencyV30Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeConsistencyV3XTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeFrom3LoggedBatchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeFrom3ReplicationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeFrom3UnloggedBatchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeMessageForwardTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeReadRepairDeleteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeReadRepairWriteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/MixedModeWritetimeOrTTLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/Pre40MessageFilterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/RepairRequestTimeoutUpgradeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/UpgradeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/upgrade/UpgradeTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/util/PyDtest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/distributed/util/QueryResultUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/distributed/org/apache/cassandra/io/sstable/format/ForwardingSSTableReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/cql3/CorruptionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/cql3/ManyRowsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/cql3/ViewLongTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/db/commitlog/BatchCommitLogStressTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/db/commitlog/GroupCommitLogStressTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/db/commitlog/PeriodicCommitLogStressTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/db/compaction/LongCompactionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/db/compaction/LongLeveledCompactionStrategyCQLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/db/compaction/LongLeveledCompactionStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/dht/tokenallocator/AbstractReplicationAwareTokenAllocatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/dht/tokenallocator/Murmur3ReplicationAwareTokenAllocatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/dht/tokenallocator/NoReplicationTokenAllocatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/dht/tokenallocator/RandomReplicationAwareTokenAllocatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/dht/tokenallocator/TokenAllocatorTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/hints/HintsWriteThenReadTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/io/compress/CompressorPerformance.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/io/sstable/CQLSSTableWriterLongTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/locator/DynamicEndpointSnitchLongTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/streaming/LongStreamingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/utils/HeapUtilsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/long/org/apache/cassandra/utils/LongBloomFilterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/memory/org/apache/cassandra/db/compaction/CompactionAllocationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/AbstractTypeByteSourceDecodingBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/AutoBoxingBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/BTreeBuildBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/BTreeSearchIteratorBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/BatchStatementBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/BloomFilterSerializerBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/CacheLoaderBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/CachingBenchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/ChecksumBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/CompactionBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/DiagnosticEventPersistenceBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/DiagnosticEventServiceBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/DirectorySizerBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/FastThreadExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/FastThreadLocalBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/GcCompactionBenchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/HashingBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/LatencyTrackingBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/MessageOutBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/MetadataCollectorBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/MutationBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/OutputStreamBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/PendingRangesBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/PreaggregatedByteBufsBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/ReadWriteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/Sample.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/StreamingTombstoneHistogramBuilderBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/StringsEncodeBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/TimedMonitorBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/VIntCodingBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/ZeroCopyStreamingBenchmark.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/btree/AtomicBTreePartitionUpdateBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/btree/BTreeBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/btree/BTreeBuildBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/btree/BTreeTransformBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/btree/BTreeUpdateBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/btree/IntVisitor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/btree/Megamorphism.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/instance/ReadTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/instance/ReadTestSmallPartitions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/instance/ReadTestWidePartitions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/instance/SimpleTableWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/instance/WriteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/tries/ComparisonReadBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/tries/InMemoryTrieReadBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/tries/InMemoryTrieUnionBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/microbench/org/apache/cassandra/test/microbench/tries/InMemoryTrieWriteBench.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/resources/blogpost.yaml
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/resources/byteman/mutation_limiter.btm
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/resources/byteman/stream_failure.btm
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/resources/functions/configure_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/resources/functions/install_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/resources/functions/nodetool_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/resources/functions/start_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/resources/functions/stop_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/resources/functions/wipe_cassandra.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/ChanceSupplier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/ClassTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/Flag.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/GlobalMethodTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/Hashcode.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/InterceptAgent.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/InterceptClasses.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/MethodLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/MethodWriterSink.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/MonitorEnterExitParkTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/MonitorMethodTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/NemesisFieldKind.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/NemesisGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/NemesisTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/ShadowingTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/ThreadLocalRandomCheckTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/TransformationKind.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/Utils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/asm/org/apache/cassandra/simulator/asm/package-info.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/bootstrap/org/apache/cassandra/simulator/systems/InterceptorOfSystemMethods.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/Action.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/ActionList.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/ActionListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/ActionPlan.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/ActionSchedule.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/Actions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/ClusterSimulation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/Debug.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/FutureActionScheduler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/OrderOn.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/OrderOns.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/Ordered.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/OrderedOn.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/RandomSource.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/RunnableActionScheduler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/Simulation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/SimulationRunner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/SimulatorUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/asm/InterceptAsClassTransformer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/asm/NemesisFieldSelectors.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/ClusterAction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/ClusterActionListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/ClusterActions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/ClusterReliableAction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/ClusterReliableQueryAction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/ClusterUnsafeAction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/KeyspaceActions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/NodeLookup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/NodesByDc.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterChangeRf.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterChangeTopology.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterFullRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterJoin.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterLeave.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterMarkDown.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterRepairRanges.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterReplace.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterSetPaxosVariant.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterSyncPendingRanges.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnClusterUpdateGossip.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceBootstrap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceFlushAndCleanup.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceGossipWith.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceGossipWithAll.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceMarkShutdown.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSendLocalGossipState.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSendShutdown.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSendShutdownToAll.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSetBootstrapReplacing.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSetBootstrapping.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSetLeaving.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSetLeft.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSetNormal.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSetPaxosVariant.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSyncPendingRanges.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceSyncSchemaForBootstrap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/OnInstanceTopologyChangePaxosRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/Topology.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/TopologyListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/cluster/Utils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/debug/Reconcile.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/debug/Record.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/debug/SelfReconcile.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/debug/SelfReconcilingRandom.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/package-info.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/Ballots.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/HistoryChecker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/HistoryViolation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/Observation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/PairOfSequencesPaxosSimulation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/PaxosClusterSimulation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/PaxosRepairValidator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/PaxosSimulation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/PaxosSimulationRunner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/paxos/PaxosTopologyChangeVerifier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/Failures.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptedExecution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptedIdentityHashMap.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptedWait.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptibleThread.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptibleThreadFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptingAwaitable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptingExecutor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptingExecutorFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptingGlobalMethods.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptingMonitors.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptingWaitQueue.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptorOfConsequences.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptorOfExecution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/InterceptorOfGlobalMethods.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/NetworkConfig.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/NonInterceptible.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/NotInterceptedSyncCondition.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/NotifyThreadPaused.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/PerClassLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SchedulerConfig.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedAction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedActionCallable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedActionConsumer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedActionTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedBallots.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedExecution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedFailureDetector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedFutureActionScheduler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedMessageDelivery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedSnitch.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedSystems.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/systems/SimulatedTime.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/utils/ChanceRange.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/utils/CompactLists.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/utils/CountingCollection.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/utils/IntRange.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/utils/IntrusiveLinkedList.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/utils/IntrusiveLinkedListNode.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/utils/KindOfSequence.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/utils/LongRange.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/main/org/apache/cassandra/simulator/utils/SafeCollections.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/test/org/apache/cassandra/simulator/test/ClassWithSynchronizedMethods.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/test/org/apache/cassandra/simulator/test/MonitorMethodTransformerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/test/org/apache/cassandra/simulator/test/ShortPaxosSimulationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/test/org/apache/cassandra/simulator/test/SimulationTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/simulator/test/org/apache/cassandra/simulator/test/TrivialSimulationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/AbstractSerializationsTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/CassandraBriefJUnitResultFormatter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/CassandraIsolatedJunit4ClassRunner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/CassandraXMLJUnitResultFormatter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/ConsoleAppender.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/JStackJUnitTask.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/LogbackStatusListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/MethodComparator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/RepeatableRunner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/SchemaLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/ServerTestUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/TeeingAppender.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/UpdateBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/Util.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/audit/AuditLogFilterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/audit/AuditLogOptionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerAuthTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerCleanupTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/audit/AuditLoggerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/audit/BinAuditLoggerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/audit/InMemoryAuditLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/AuthCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/AuthPropertiesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/AuthTestUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/CacheRefresherTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/CassandraAuthorizerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/CassandraAuthorizerTruncatingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/CassandraNetworkAuthorizerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/CassandraRoleManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/CreateAndAlterRoleTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/FunctionResourceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/GrantAndRevokeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/PasswordAuthenticatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/ResourcesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/RoleOptionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/RolesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/StubAuthorizer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/jmx/AuthorizationProxyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/auth/jmx/JMXAuthTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/batchlog/BatchlogEndpointFilterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/batchlog/BatchlogManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/batchlog/BatchlogTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cache/AutoSavingCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cache/CacheProviderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cache/NopCacheProviderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/concurrent/AbstractExecutorPlusTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/concurrent/ExecutorPlusTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/concurrent/InfiniteLoopExecutorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/concurrent/LocalAwareExecutorPlusTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/concurrent/SEPExecutorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/concurrent/WaitQueueTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/CassandraRelevantPropertiesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/ConfigCompatabilityTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/DataRateSpecTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/DataStorageSpecTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/DatabaseDescriptorRefTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/DatabaseDescriptorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/DefaultLoaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/DurationSpecTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/EncryptionOptionsEqualityTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/EncryptionOptionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/FailStartupDuplicateParamsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/LoadOldYAMLBackwardCompatibilityTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/LoaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/OverrideConfigurationLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/ParseAndConvertUnitsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/PropertiesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/SnakeYamlLoader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/StartupCheckOptionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/config/YamlConfigurationLoaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql/jdbc/JdbcDecimalTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/AssignmentTestableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/BatchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/CDCStatementTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/CQL3TypeLiteralTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ColumnIdentifierTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/CqlParserTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/CustomNowInSecondsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/DeleteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/DistinctQueryPagingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/DurationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/EmptyValuesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ErrorCollectorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/GcCompactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/IndexQueryPagingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/KeyCacheCqlTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/KeywordSplit1Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/KeywordSplitTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/KeywordTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ListsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/NodeLocalConsistencyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/NonNativeTimestampTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/OutOfSpaceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/PagingQueryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/PagingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/PasswordObfuscatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/PreparedStatementsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/PstmtPersistenceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/QueryEventsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/QueryWithIndexedSSTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ReservedKeywordsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/SerializationMirrorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/SimpleQueryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/TombstonesWithIndexedSSTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/TraceCqlTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/UDHelperTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewAbstractParameterizedTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewAbstractTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexDeletionsPartialTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexDeletionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexLivenessLimitTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexLivenessTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTTLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexTombstoneTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewComplexUpdatesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewFiltering1Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewFiltering2Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering1Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringClustering2Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringComplexPKTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringSimplePKTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewPKTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewRangesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewSchemaTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/ViewTimesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/conditions/ColumnConditionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/CastFctsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/CollectionFctsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/FunctionFactoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/MathFctsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/OperationFctsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/TimeFctsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/masking/DefaultMaskingFunctionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/masking/HashMaskingFunctionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/masking/MaskingFunctionTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/masking/NullMaskingFunctionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/masking/PartialMaskingFunctionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/functions/masking/ReplaceMaskingFunctionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/restrictions/ClusteringColumnRestrictionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/selection/SelectionColumnMappingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/selection/SelectorSerializationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/selection/TermSelectionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/statements/AlterRoleStatementTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/statements/CreateRoleStatementTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/statements/CreateUserStatementTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/statements/DescribeStatementTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/statements/PropertyDefinitionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/statements/SelectStatementTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CollectionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/CountersTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/DateTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/FrozenCollectionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/JsonTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnMapEntriesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexOnStaticColumnTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/SecondaryIndexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/StaticColumnsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TimestampTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TimeuuidTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TupleTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/TypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFAuthTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFIdentificationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFJavaTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFSecurityTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFTypesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UFVerifierTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/UserTypesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/VirtualTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/WritetimeOrTTLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/CallClone.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/CallFinalize.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/CallOrgApache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/ClassWithField.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/ClassWithInitializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/ClassWithInitializer2.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/ClassWithInitializer3.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/ClassWithInnerClass.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/ClassWithInnerClass2.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/ClassWithStaticInitializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/ClassWithStaticInnerClass.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/GoodClass.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/UseOfSynchronized.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/UseOfSynchronizedWithNotify.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/UseOfSynchronizedWithNotifyAll.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/UseOfSynchronizedWithWait.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/UseOfSynchronizedWithWaitL.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/UseOfSynchronizedWithWaitLI.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/entities/udfverify/UsingMapEntry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/CrcCheckChanceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/OverflowTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/PgStringTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/RoleSyntaxTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTableMetadataTrackingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/SSTablesIteratedTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/miscellaneous/TombstonesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AggregationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AlterNTSTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AlterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/AutoSnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/BatchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/CompactStorageSplit1Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/CompactStorageSplit2Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/CompactTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/CreateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/DeleteTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/DropRecreateAndRestoreTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/DropTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/InsertTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/InsertUpdateIfConditionCollectionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/InsertUpdateIfConditionStaticsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/InsertUpdateIfConditionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/SelectGroupByTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/SelectLimitTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/SelectMultiColumnRelationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/SelectOrderByTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/SelectOrderedPartitionerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/SelectSingleColumnRelationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/SelectTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/TTLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/TruncateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/TuplesWithNullsComparisonTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/UpdateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/cql3/validation/operations/UseTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/AbstractReadQueryToCQLStringTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/CellSpecTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/CellTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/CleanupTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/CleanupTransientTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ClusteringHeapSizeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ClusteringPrefixTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ColumnFamilyMetricTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ColumnFamilyStoreMBeanTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ColumnsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/CounterCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/CounterCellTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/CounterMutationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/DeletePartitionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/DigestTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/DirectoriesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/DiskBoundaryManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ImportTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/KeyspaceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/LivenessInfoTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/MmapFileTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/MultiKeyspaceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/MutationExceededMaxSizeExceptionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/NameSortTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/NativeCellTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/PartitionRangeReadTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/PartitionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RangeTombstoneListTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RangeTombstoneTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ReadCommandTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ReadCommandVerbHandlerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ReadMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/ReadResponseTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RecoveryManagerFlushedTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RecoveryManagerMissingHeaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RecoveryManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RecoveryManagerTruncateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RemoveCellTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RepairedDataInfoTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RepairedDataTombstonesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RowCacheCQLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RowCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RowIterationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RowTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/RowUpdateBuilder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/SSTableAndMemTableDigestMatchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/SchemaCQLHelperTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/SecondaryIndexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/SerializationHeaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/SinglePartitionReadCommandCQLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/SinglePartitionSliceCommandTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/SnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/SystemKeyspaceMigrator41Test.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/SystemKeyspaceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/TimeSortTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/TopPartitionTrackerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/TransformerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/aggregation/GroupMakerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/columniterator/SSTableReverseIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/AbstractCommitLogServiceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/BatchCommitLogTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CDCTestReplayer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogCQLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogChainedMarkersTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogDescriptorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogFailurePolicyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogInitWithExceptionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogReaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogSegmentBackpressureTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogSegmentManagerCDCTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogTestReplayer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogUpgradeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogUpgradeTestMaker.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitlogShutdownTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/GroupCommitLogTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/commitlog/SegmentReaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/AbstractCompactionStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/AbstractPendingRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/ActiveCompactionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/AntiCompactionBytemanTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/AntiCompactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CancelCompactionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionControllerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionExecutorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionInfoTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionStrategyManagerBoundaryReloadTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionStrategyManagerPendingRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionStrategyManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionTaskTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionsBytemanTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionsCQLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionsPurgeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/CorruptedSSTablesCompactionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/DateTieredCompactionStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/LeveledCompactionStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/LeveledGenerationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/NeverPurgeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/OneCompactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/PendingRepairManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/SingleSSTableLCSTaskTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/TTLExpiryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/ValidationExecutorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/compaction/writers/CompactionAwareWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/composites/CTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/context/CounterContextTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/filter/ColumnFilterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/filter/RowFilterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/filter/SliceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailAllowFilteringTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailAllowUncompressedTablesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailAlterTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailCollectionSizeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailColumnValueSizeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailColumnsPerTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailConsistencyLevelsTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailDiskUsageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailDropKeyspaceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailDropTruncateTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailFieldsPerUDTTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailGroupByTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailInSelectCartesianProductTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailItemsPerCollectionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailKeyspacesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailMaximumReplicationFactorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailMinimumReplicationFactorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailNewCompactStorageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailPageSizeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailPartitionKeysInSelectTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailReadBeforeWriteListOperationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailReadConsistencyLevelsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailSecondaryIndexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailSecondaryIndexesPerTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailSimpleStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailTablePropertiesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailTablesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailUserTimestampsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailViewsPerTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailWriteConsistencyLevelsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailZeroDefaultTTLOnTWCSTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailsConfigProviderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/GuardrailsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/guardrails/ThresholdTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/lifecycle/HelpersTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/lifecycle/LifecycleTransactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/lifecycle/LogTransactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/lifecycle/RealTransactionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/lifecycle/TrackerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/lifecycle/ViewTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/AbstractCompositeTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/ByteBufferAccessorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/BytesTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/CollectionTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/CollectionTypesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/CompositeAndTupleTypesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/CompositeTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/DecimalTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/DynamicCompositeTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/EmptyTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/IntegerTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/JsonConversionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/ReversedTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/RoundTripTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/SimpleDateTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/TimeTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/TimeUUIDTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/TimestampTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/TypeCompareTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/TypeParserTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/TypeValidationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/UUIDTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/ValueAccessorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/ValueAccessorTester.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/ValueAccessors.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/marshal/ValueGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/memtable/MemtableQuickTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/memtable/MemtableSizeHeapBuffersTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/memtable/MemtableSizeOffheapBuffersTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/memtable/MemtableSizeOffheapObjectsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/memtable/MemtableSizeTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/memtable/MemtableSizeUnslabbedTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/memtable/ShardedMemtableConfigTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/memtable/TestMemtable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/monitoring/MonitoringTaskTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/partition/PartitionImplementationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/partition/PartitionUpdateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/partitions/AtomicBTreePartitionMemtableAccountingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/partitions/PurgeFunctionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/repair/AbstractPendingAntiCompactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/repair/CompactionManagerGetSSTablesForValidationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/repair/PendingAntiCompactionBytemanTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/repair/PendingAntiCompactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/ColumnMetadataVersionComparatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/EncodingStatsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/PartitionSerializationExceptionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/RowAndDeletionMergeIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/RowsMergingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/RowsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/ThrottledUnfilteredIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/UnfilteredRowIteratorWithLowerBoundTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/UnfilteredRowIteratorsMergeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/UnfilteredRowIteratorsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/rows/UnfilteredRowsGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/streaming/CassandraOutgoingFileTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/streaming/CassandraStreamHeaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/streaming/CassandraStreamManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/streaming/ComponentManifestTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/streaming/EntireSSTableStreamConcurrentComponentMutationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/streaming/StreamRequestTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/transform/DuplicateRowCheckerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/transform/RTTransformationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/tries/CollectionMergeTrieTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/tries/InMemoryTrieApplyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/tries/InMemoryTriePutTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/tries/InMemoryTrieTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/tries/InMemoryTrieThreadedTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/tries/MergeTrieTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/tries/SlicedTrieTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/tries/TrieToDot.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/tries/TrieToDotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/view/ViewBuilderTaskTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/view/ViewUtilsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/BatchMetricsTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/CQLMetricsTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/ClientsTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/CredentialsCacheKeysTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/GossipInfoTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/JmxPermissionsCacheKeysTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/LocalRepairTablesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/LogMessagesTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/NetworkPermissionsCacheKeysTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/PermissionsCacheKeysTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/RolesCacheKeysTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/SSTableTasksTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/SettingsTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/StreamingVirtualTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/db/virtual/SystemPropertiesTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/BootStrapperTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/BoundsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/ByteOrderedPartitionerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/KeyCollisionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/LengthPartitioner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/Murmur3PartitionerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/OrderPreservingPartitionerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/PartitionerTestCase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/RandomPartitionerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/RangeFetchMapCalculatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/RangeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/SplitterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/StreamStateStoreTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/tokenallocator/OfflineTokenAllocatorGenerationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/tokenallocator/OfflineTokenAllocatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/tokenallocator/OfflineTokenAllocatorTestUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/dht/tokenallocator/TokenAllocationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/diag/DiagnosticEventServiceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/diag/store/DiagnosticEventMemoryStoreTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/fql/FullQueryLoggerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/ArrayBackedBoundedStatsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/ArrivalWindowTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/EndpointStateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/ExpireEndpointTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/FailureDetectorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/GossipDigestTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/GossiperTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/PendingRangeCalculatorServiceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/SerializationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/gms/ShadowRoundTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/AlteredHints.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/ChecksummedDataInputTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/DTestSerializer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintServiceBytemanTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintWriteTTLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsBufferPoolTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsBufferTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsCatalogTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsCompressionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsDescriptorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsEncryptionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsReaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsServiceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsStoreTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/hints/HintsTestUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/CustomIndexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/SecondaryIndexManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/StubIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/internal/CassandraIndexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/internal/CustomCassandraIndex.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/SASICQLTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/SASIIndexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/analyzer/DelimiterAnalyzerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/analyzer/NonTokenizingAnalyzerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/analyzer/StandardAnalyzerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/conf/IndexModeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/disk/OnDiskIndexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/disk/PerSSTableIndexWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/disk/TokenTreeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/plan/ExpressionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/plan/OperationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/utils/LongIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/utils/LongIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/utils/MappedBufferTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/utils/RangeIntersectionIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/index/sasi/utils/RangeUnionIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/DiskSpaceMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/compress/CQLCompressionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/compress/CompressedRandomAccessReaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/compress/CompressedSequentialWriterReopenTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/compress/CompressedSequentialWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/compress/CompressionMetadataTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/compress/CompressorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/compress/MockCompressor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/compress/ZstdCompressorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/CQLSSTableWriterClientTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/CQLSSTableWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/ComponentTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/DescriptorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/LargePartitionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/RangeAwareSSTableWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableCorruptionDetectionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableFlushObserverTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableFormatTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableHeaderFixTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableIdTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableLoaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableMetadataTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableReaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableRewriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableScannerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableWriterTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableWriterTransactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableZeroCopyWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/ScrubTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/VerifyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/filter/BloomFilterTrackerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/format/VersionAndTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/format/big/RowIndexEntryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/indexsummary/IndexSummaryManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/indexsummary/IndexSummaryRedistributionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/indexsummary/IndexSummaryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/keycache/KeyCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/sstable/metadata/MetadataSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/BufferedDataOutputStreamTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/BufferedRandomAccessFileTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/ChecksummedRandomAccessReaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/ChecksummedSequentialWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/DataOutputTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/DiskOptimizationStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/FileSegmentInputStreamTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/FileTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/FileUtilsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/MemoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/MmappedRegionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/NIODataInputStreamTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/RandomAccessReaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/SafeMemoryWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/SequentialWriterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/io/util/WrappingRebuffererTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/AbstractReplicationStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/AlibabaCloudSnitchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/AssureSufficientLiveNodesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/CloudstackSnitchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/DynamicEndpointSnitchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/EC2SnitchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/GoogleCloudSnitchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/GossipingPropertyFileSnitchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/InetAddressAndPortSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/InetAddressAndPortTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/NetworkTopologyStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/PendingRangeMapsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/PendingRangesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/PropertyFileSnitchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/ReconnectableSnitchHelperTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/ReplicaCollectionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/ReplicaLayoutTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/ReplicaPlansTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/ReplicaUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/ReplicationFactorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/ReplicationStrategyEndpointCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/SimpleSeedProviderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/SimpleStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/locator/TokenMetadataTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/BatchMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/BufferPoolMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/CQLMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/CacheMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/CassandraMetricsRegistryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/ClientRequestMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/ClientRequestRowAndColumnMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/ClientRequestSizeMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/DecayingEstimatedHistogramReservoirTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/HintedHandOffMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/KeyspaceMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/LatencyMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/MaxSamplerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/SamplerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/TableMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/ThreadPoolMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/TopFrequencySamplerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/metrics/TrieMemtableMetricsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/AsyncChannelPromiseTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/AsyncMessageOutputPlusTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/AsyncOneResponseTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/AsyncStreamingInputPlusTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/AsyncStreamingOutputPlusTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/BufferPoolAllocatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/ChunkedInputPlusTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/ConnectionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/ConnectionUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/ForwardingInfoTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/FramingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/HandshakeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/ManyToOneConcurrentLinkedQueueTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/Matcher.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/MatcherResponse.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/MessageSerializationPropertyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/MessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/MessagingServiceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/MockMessagingService.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/MockMessagingServiceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/MockMessagingSpy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/OutboundConnectionSettingsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/OutboundConnectionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/OutboundMessageQueueTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/ProxyHandlerConnectionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/PrunableArrayQueueTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/ResourceLimitsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/SocketUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/StartupClusterConnectivityCheckerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/TestChannel.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/TestScheduledFuture.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/VerbTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/WriteCallbackInfoTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/proxy/InboundProxyHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/net/proxy/ProxyHandlerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/AbstractRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/LocalSyncTaskTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/NeighborsAndRangesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/RepairJobTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/RepairSessionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/StreamingRepairTaskTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/SymmetricRemoteSyncTaskTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/ValidationTaskTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/ValidatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/asymmetric/DifferenceHolderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/asymmetric/RangeDenormalizerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/asymmetric/RangeMapTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/asymmetric/ReduceHelperTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/asymmetric/StreamFromOptionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/AbstractConsistentSessionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/BulkRepairStateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/CoordinatorMessagingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/CoordinatorSessionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/CoordinatorSessionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/LocalSessionAccessor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/LocalSessionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/PendingRepairStatTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/RepairStateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/consistent/admin/SchemaArgsParserTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/messages/RepairMessageSerializationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/messages/RepairMessageSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/repair/messages/RepairOptionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/CreateTableValidationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/IndexMetadataTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/MemtableParamsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/MigrationCoordinatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/MigrationManagerDropKSTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/MigrationManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/MockSchema.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/RemoveWithoutDroppingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/SchemaKeyspaceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/SchemaMutationsSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/SchemaStatementWarningsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/SchemaTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/SchemaTestUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/TableMetadataTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/TupleTypesRepresentationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/schema/ValidationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/CipherFactoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/CustomSslContextFactoryConfigTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/CustomSslContextFactoryInvalidConfigTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/DefaultSslContextFactoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/DummySslContextFactoryImpl.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/EncryptionContextGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/EncryptionUtilsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/JKSKeyProviderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/PEMBasedSslContextFactoryConfigTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/PEMBasedSslContextFactoryInvalidConfigTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/PEMBasedSslContextFactoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/PEMJKSSslContextFactoryConfigTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/PEMReaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/security/SSLFactoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/serializers/DecimalSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/serializers/MapSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/serializers/SerializationUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/serializers/SetSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/serializers/SimpleDateSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/serializers/TimeSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/serializers/TimestampSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/AbstractFilesystemOwnershipCheckTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/ActiveRepairServiceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/BootstrapTransientTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/ClientStateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/ClientWarningsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/DefaultFSErrorHandlerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/DiskFailurePolicyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/GCInspectorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/JoinTokenRingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/LeaveAndBootstrapTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/LegacyAuthFailTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/MoveTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/MoveTransientTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/NativeTransportServiceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/OptionalTasksTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/PartitionDenylistTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/PaxosStateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/ProtocolBetaVersionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/QueryPagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/RMIServerSocketFactoryImplTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/RemoveTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/SSTablesGlobalTrackerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/SerializationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/StartupChecksTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/StorageProxyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/StorageServiceAccessor.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/StorageServiceServerM3PTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/StorageServiceServerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/StorageServiceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/SystemPropertiesBasedFileSystemOwnershipCheckTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/WriteResponseHandlerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/WriteResponseHandlerTransientTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/YamlBasedFileSystemOwnershipCheckTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/pager/PagingStateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/pager/RandomizedPagingStateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/AbstractPaxosRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/ContentionStrategyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/PaxosProposeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/PaxosRepairHistoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/PaxosRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/PaxosStateTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/cleanup/PaxosTableRepairsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/uncommitted/PaxosBallotTrackerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/uncommitted/PaxosMockUpdateSupplier.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/uncommitted/PaxosRowsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/uncommitted/PaxosStateTrackerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/uncommitted/PaxosUncommittedTests.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/uncommitted/PaxosUncommittedTrackerIntegrationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/uncommitted/PaxosUncommittedTrackerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/paxos/uncommitted/UncommittedTableDataTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/AbstractReadResponseTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/DataResolverTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/DigestResolverTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/ReadExecutorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/SpeculativeRetryParseTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/range/RangeCommandIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/range/RangeCommandsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/range/ReplicaPlanIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/range/ReplicaPlanMergerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/range/TokenUpdater.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/repair/AbstractReadRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/repair/BlockingReadRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/repair/DiagEventsBlockingReadRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/repair/InstrumentedReadRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/repair/ReadOnlyReadRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/repair/ReadRepairTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/repair/RepairedDataVerifierTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/repair/TestableReadRepair.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/reads/thresholds/WarningsSnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/snapshot/SnapshotLoaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/snapshot/SnapshotManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/snapshot/SnapshotManifestTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/service/snapshot/TableSnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/EntireSSTableStreamingCorrectFilesCountTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/SessionInfoTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/StreamManagerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/StreamOperationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/StreamRateLimiterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/StreamSessionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/StreamTransferTaskTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/StreamingTransferTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/async/StreamCompressionSerializerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/async/StreamingInboundHandlerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/async/StreamingMultiplexedChannelTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/compression/CompressedInputStreamTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/messages/KeepAliveMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/streaming/messages/StreamMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/AuditLogViewerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/BulkLoaderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/CompactionStressTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/GenerateTokensTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/GetVersionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/HashPasswordTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/JMXCompatabilityTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/JMXStandardsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/JMXToolTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/LoaderOptionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/NodeProbeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/OfflineToolUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/SSTableExpiredBlockersTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/SSTableExportSchemaLoadingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/SSTableExportTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/SSTableLevelResetterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/SSTableMetadataViewerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/SSTableOfflineRelevelTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/SSTableRepairedAtSetterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/StandaloneSSTableUtilTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/StandaloneScrubberTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/StandaloneSplitterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/StandaloneSplitterWithCQLTesterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/StandaloneUpgraderOnSStablesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/StandaloneUpgraderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/StandaloneVerifierOnSSTablesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/StandaloneVerifierTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/SystemExitException.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/ToolRunner.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/ToolsEnvsConfigsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/ToolsSchemaLoadingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/TopPartitionsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/cassandrastress/CassandrastressTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/cqlsh/CqlshTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/ClearSnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/ClientStatsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/CompactTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/CompactionHistoryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/CompactionStatsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/DataPathsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/ForceCompactionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/GetAuditLogTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/GetAuthCacheConfigTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/GetDefaultKeyspaceRFTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/GetFullQueryLogTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/GossipInfoTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/InvalidateCredentialsCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/InvalidateJmxPermissionsCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/InvalidateNetworkPermissionsCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/InvalidatePermissionsCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/InvalidateRolesCacheTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/NetStatsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/RingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/ScrubToolTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SetAuthCacheConfigTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SetDefaultKeyspaceRFTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SetGetColumnIndexSizeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SetGetCompactionThroughputTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SetGetEntireSSTableInterDCStreamThroughputTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SetGetEntireSSTableStreamThroughputTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SetGetInterDCStreamThroughputTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SetGetStreamThroughputTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SjkTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/SnapshotTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/StatusTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/TableStatsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/TpStatsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/UninitializedServerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/VerifyTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/formatter/TableBuilderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/stats/StatsPrinterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/stats/StatsTableComparatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/stats/TableStatsPrinterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tools/nodetool/stats/TableStatsTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/tracing/TracingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/CBUtilTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/CQLConnectionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/CQLUserAuditTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/ClientNotificiationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/ClientResourceLimitsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/DataTypeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/ErrorMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/IdleDisconnectTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/MessageDispatcherTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/MessagePayloadTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/ProtocolErrorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/ProtocolNegotiationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/ProtocolVersionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/ProtocolVersionTrackerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/RateLimitingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/SerDeserTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/WriteBytesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/messages/AuthenticateMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/messages/EncodeAndDecodeTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/transport/messages/PrepareMessageTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/triggers/TriggerExecutorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/triggers/TriggersSchemaTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/triggers/TriggersTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/AbstractIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/AbstractTypeGenerators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/AssertUtil.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/AssertionUtils.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/AssertionUtilsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/BloomFilterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/ByteArrayUtilTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/ByteBufferUtilTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/BytesReadTrackerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/CassandraGenerators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/CassandraVersionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/EstimatedHistogramTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/FBUtilitiesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/FailingRunnable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/FastByteOperationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/FilterTestHelper.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/FixedMonotonicClock.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/FreeRunningClock.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/Generators.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/GeneratorsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/HexTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/HistogramBuilderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/IntegerIntervalsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/IntervalTreeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/JVMStabilityInspectorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/JavaUtilsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/KeyGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/KillerForTests.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/MergeIteratorComparisonTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/MergeIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/MerkleTreeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/MerkleTreesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/MonotonicClockTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/NativeLibraryTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/NoSpamLoggerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/ObjectSizesTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/OverlapIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/RecomputingSupplierTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/ResetableIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/Retry.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/SerializationsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/SimpleGraph.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/SimpleGraphTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/StatusLoggerTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/TeeDataInputPlusTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/UUIDTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/asserts/SizeableObjectAssert.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/asserts/SyncTaskAssert.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/asserts/SyncTaskListAssert.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/binlog/BinLogTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/binlog/DeletingArchiverTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/binlog/ExternalArchiverTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/btree/BTreeRemovalTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/btree/BTreeSearchIteratorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/btree/BTreeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/bytecomparable/AbstractTypeByteSourceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/bytecomparable/ByteSourceComparisonTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/bytecomparable/ByteSourceConversionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/bytecomparable/ByteSourceInverseTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/bytecomparable/ByteSourceSequenceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/bytecomparable/ByteSourceTestBase.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/bytecomparable/DecoratedKeyByteSourceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/AbstractTestAsyncPromise.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/AbstractTestAwaitable.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/AbstractTestPromise.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/AbstractTransactionalTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/AccumulatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/AsyncPromiseTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/ConditionTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/CountDownLatchTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/ImmediateFutureTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/LoadingMapTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/NonBlockingRateLimiterTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/RefCountedTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/SemaphoreTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/concurrent/WeightedQueueTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/memory/BufferPoolTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/memory/MemtableCleanerThreadTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/memory/NativeAllocatorTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/obs/OffHeapBitSetTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/streamhist/StreamingTombstoneHistogramBuilderTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/test/unit/org/apache/cassandra/utils/vint/VIntCodingTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/bin/cassandra.in.sh
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/DriverResultSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/FQLQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/FQLQueryIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/FQLQueryReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/FullQueryLogTool.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/MismatchListener.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/QueryReplayer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/ResultComparator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/ResultHandler.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/ResultStore.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/StoredResultSet.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/commands/Compare.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/commands/Dump.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/commands/Replay.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/test/unit/org/apache/cassandra/fqltool/FQLCompareTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/test/unit/org/apache/cassandra/fqltool/FQLReplayTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/fqltool/test/unit/org/apache/cassandra/fqltool/commands/DumpTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/io/sstable/StressCQLSSTableWriter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/CompactionStress.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/Operation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/Stress.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/StressAction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/StressGraph.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/StressProfile.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/StressYaml.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/WorkManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/Distribution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/DistributionBoundApache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/DistributionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/DistributionFixed.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/DistributionInverted.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/DistributionOffsetApache.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/DistributionQuantized.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/DistributionSequence.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/FasterRandom.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/PartitionGenerator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/PartitionIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/RatioDistribution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/RatioDistributionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/Row.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/Seed.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/SeedManager.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/TokenRangeIterator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/BigDecimals.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/BigIntegers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Booleans.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Bytes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Dates.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Doubles.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Floats.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Generator.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/GeneratorConfig.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/HexBytes.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/HexStrings.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Inets.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Integers.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Lists.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/LocalDates.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Longs.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Sets.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/SmallInts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Strings.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/TimeUUIDs.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/Times.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/TinyInts.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/generate/values/UUIDs.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/FixedOpDistribution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/OpDistribution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/OpDistributionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/PartitionOperation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/SampledOpDistribution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/SampledOpDistributionFactory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/predefined/CqlCounterAdder.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/predefined/CqlCounterGetter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/predefined/CqlInserter.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/predefined/CqlOperation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/predefined/CqlReader.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/predefined/PredefinedOperation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/userdefined/CASQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/userdefined/SchemaInsert.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/userdefined/SchemaQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/userdefined/SchemaStatement.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/userdefined/TokenRangeQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/operations/userdefined/ValidatingSchemaQuery.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/report/StressMetrics.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/report/Timer.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/report/TimingInterval.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/report/TimingIntervals.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/CliOption.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/Command.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/CommandCategory.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/ConnectionAPI.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/ConnectionStyle.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/CqlVersion.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/GroupedOptions.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/Legacy.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/Option.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/OptionAnyProbabilities.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/OptionCompaction.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/OptionDistribution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/OptionEnumProbabilities.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/OptionMulti.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/OptionRatioDistribution.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/OptionReplication.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/OptionSimple.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsColumn.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsCommand.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsCommandPreDefined.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsCommandPreDefinedMixed.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsCommandUser.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsErrors.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsGraph.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsInsert.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsLog.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsMisc.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsMode.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsNode.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsPopulation.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsPort.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsRate.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsSchema.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsTokenRange.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/SettingsTransport.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/settings/StressSettings.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/util/JavaDriverClient.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/util/JmxCollector.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/util/MultiResultLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/util/NoopResultLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/util/ResultLogger.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/org/apache/cassandra/stress/util/Uncertainty.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/src/resources/org/apache/cassandra/stress/graph/graph.html
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/test/unit/org/apache/cassandra/stress/generate/DistributionGaussianTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/test/unit/org/apache/cassandra/stress/generate/DistributionSequenceTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/test/unit/org/apache/cassandra/stress/settings/OptionReplicationTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/test/unit/org/apache/cassandra/stress/settings/SettingsMiscTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/test/unit/org/apache/cassandra/stress/settings/SettingsNodeTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/test/unit/org/apache/cassandra/stress/settings/StressSettingsTest.java
  AL    /Users/lei.fu/java/mca/Ratu-Cassandra/tools/stress/test/unit/org/apache/cassandra/stress/util/MultiResultLoggerTest.java
 
 *****************************************************
 Printing headers for files without AL header...
 
 
 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/lib/jars/netty-bom-4.1.58.Final.pom
 =======================================================================
<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017 The Netty Project
  ~
  ~ The Netty Project licenses this file to you under the Apache License,
  ~ version 2.0 (the "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at:
  ~
  ~   https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations
  ~ under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
    <relativePath />
  </parent>

  <groupId>io.netty</groupId>
  <artifactId>netty-bom</artifactId>
  <version>4.1.58.Final</version>
  <packaging>pom</packaging>

  <name>Netty/BOM</name>
  <description>Netty (Bill of Materials)</description>
  <url>https://netty.io/</url>

  <organization>
    <name>The Netty Project</name>
    <url>https://netty.io/</url>
  </organization>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>
  <inceptionYear>2008</inceptionYear>

  <scm>
    <url>https://github.com/netty/netty</url>
    <connection>scm:git:git://github.com/netty/netty.git</connection>

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType extends AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.AtomicBTreePartitionUpdateBench.ConcurrentUpdates;
public class AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.AtomicBTreePartitionUpdateBench.ConcurrentUpdates {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2 extends AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B3 extends AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class AtomicBTreePartitionUpdateBench_GlobalState_jmhType extends AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.AtomicBTreePartitionUpdateBench.GlobalState;
public class AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.AtomicBTreePartitionUpdateBench.GlobalState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2 extends AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B3 extends AtomicBTreePartitionUpdateBench_GlobalState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType extends AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.AtomicBTreePartitionUpdateBench.SingleThreadUpdates;
public class AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.AtomicBTreePartitionUpdateBench.SingleThreadUpdates {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2 extends AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B3 extends AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_concurrent_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.AtomicBTreePartitionUpdateBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.AtomicBTreePartitionUpdateBench_ConcurrentUpdates_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.AtomicBTreePartitionUpdateBench_GlobalState_jmhType;
public final class AtomicBTreePartitionUpdateBench_concurrent_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class AtomicBTreePartitionUpdateBench_jmhType extends AtomicBTreePartitionUpdateBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.AtomicBTreePartitionUpdateBench;
public class AtomicBTreePartitionUpdateBench_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.AtomicBTreePartitionUpdateBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class AtomicBTreePartitionUpdateBench_jmhType_B2 extends AtomicBTreePartitionUpdateBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<AtomicBTreePartitionUpdateBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AtomicBTreePartitionUpdateBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class AtomicBTreePartitionUpdateBench_jmhType_B3 extends AtomicBTreePartitionUpdateBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_oneFailure_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.AtomicBTreePartitionUpdateBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.AtomicBTreePartitionUpdateBench_GlobalState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType;
public final class AtomicBTreePartitionUpdateBench_oneFailure_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/AtomicBTreePartitionUpdateBench_success_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.AtomicBTreePartitionUpdateBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.AtomicBTreePartitionUpdateBench_GlobalState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.AtomicBTreePartitionUpdateBench_SingleThreadUpdates_jmhType;
public final class AtomicBTreePartitionUpdateBench_success_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeBench_BuildSizeState_jmhType extends BTreeBench_BuildSizeState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.BTreeBench.BuildSizeState;
public class BTreeBench_BuildSizeState_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.BTreeBench.BuildSizeState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeBench_BuildSizeState_jmhType_B2 extends BTreeBench_BuildSizeState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBench_BuildSizeState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_BuildSizeState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBench_BuildSizeState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_BuildSizeState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBench_BuildSizeState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_BuildSizeState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBench_BuildSizeState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_BuildSizeState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBench_BuildSizeState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_BuildSizeState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBench_BuildSizeState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_BuildSizeState_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_BuildSizeState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeBench_BuildSizeState_jmhType_B3 extends BTreeBench_BuildSizeState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeBench_jmhType extends BTreeBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.BTreeBench;
public class BTreeBench_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.BTreeBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeBench_jmhType_B2 extends BTreeBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeBench_jmhType_B3 extends BTreeBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithBuilderAuto_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBuildBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
public final class BTreeBuildBench_buildWithBuilderAuto_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithBuilderManual_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBuildBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
public final class BTreeBuildBench_buildWithBuilderManual_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithBulkStaticBuild_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBuildBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
public final class BTreeBuildBench_buildWithBulkStaticBuild_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithFastBuilder_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBuildBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
public final class BTreeBuildBench_buildWithFastBuilder_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithIterableStaticBuildMethod_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBuildBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
public final class BTreeBuildBench_buildWithIterableStaticBuildMethod_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_buildWithMegamorphicBulkStaticBuildNoop_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBuildBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
public final class BTreeBuildBench_buildWithMegamorphicBulkStaticBuildNoop_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeBuildBench_jmhType extends BTreeBuildBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.BTreeBuildBench;
public class BTreeBuildBench_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.BTreeBuildBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeBuildBench_jmhType_B2 extends BTreeBuildBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeBuildBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeBuildBench_jmhType_B3 extends BTreeBuildBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeTransformBench_ThreadState_jmhType extends BTreeTransformBench_ThreadState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.BTreeTransformBench.ThreadState;
public class BTreeTransformBench_ThreadState_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.BTreeTransformBench.ThreadState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeTransformBench_ThreadState_jmhType_B2 extends BTreeTransformBench_ThreadState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_ThreadState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_ThreadState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_ThreadState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_ThreadState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_ThreadState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_ThreadState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_ThreadState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_ThreadState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_ThreadState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_ThreadState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_ThreadState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_ThreadState_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_ThreadState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeTransformBench_ThreadState_jmhType_B3 extends BTreeTransformBench_ThreadState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeTransformBench_jmhType extends BTreeTransformBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.BTreeTransformBench;
public class BTreeTransformBench_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.BTreeTransformBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeTransformBench_jmhType_B2 extends BTreeTransformBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeTransformBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeTransformBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeTransformBench_jmhType_B3 extends BTreeTransformBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_transformAndFilterRemove_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeTransformBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeTransformBench_ThreadState_jmhType;
public final class BTreeTransformBench_transformAndFilterRemove_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_transformAndFilterReplace_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeTransformBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeTransformBench_ThreadState_jmhType;
public final class BTreeTransformBench_transformAndFilterReplace_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeTransformBench_transformReplace_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeTransformBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeTransformBench_ThreadState_jmhType;
public final class BTreeTransformBench_transformReplace_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeUpdateBench_InsertSizeState_jmhType extends BTreeUpdateBench_InsertSizeState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.BTreeUpdateBench.InsertSizeState;
public class BTreeUpdateBench_InsertSizeState_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.BTreeUpdateBench.InsertSizeState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeUpdateBench_InsertSizeState_jmhType_B2 extends BTreeUpdateBench_InsertSizeState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_InsertSizeState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_InsertSizeState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_InsertSizeState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_InsertSizeState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_InsertSizeState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_InsertSizeState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_InsertSizeState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_InsertSizeState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_InsertSizeState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_InsertSizeState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_InsertSizeState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_InsertSizeState_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_InsertSizeState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeUpdateBench_InsertSizeState_jmhType_B3 extends BTreeUpdateBench_InsertSizeState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeUpdateBench_ThreadState_jmhType extends BTreeUpdateBench_ThreadState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.BTreeUpdateBench.ThreadState;
public class BTreeUpdateBench_ThreadState_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.BTreeUpdateBench.ThreadState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeUpdateBench_ThreadState_jmhType_B2 extends BTreeUpdateBench_ThreadState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_ThreadState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_ThreadState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_ThreadState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_ThreadState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_ThreadState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_ThreadState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_ThreadState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_ThreadState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_ThreadState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_ThreadState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_ThreadState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_ThreadState_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_ThreadState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeUpdateBench_ThreadState_jmhType_B3 extends BTreeUpdateBench_ThreadState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_benchUpdate_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeUpdateBench_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeBench_BuildSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeUpdateBench_InsertSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeUpdateBench_InsertSizeState_jmhType;
import org.apache.cassandra.test.microbench.btree.generated.BTreeUpdateBench_ThreadState_jmhType;
public final class BTreeUpdateBench_benchUpdate_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeUpdateBench_jmhType extends BTreeUpdateBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import org.apache.cassandra.test.microbench.btree.BTreeUpdateBench;
public class BTreeUpdateBench_jmhType_B1 extends org.apache.cassandra.test.microbench.btree.BTreeUpdateBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeUpdateBench_jmhType_B2 extends BTreeUpdateBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeUpdateBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeUpdateBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/btree/generated/BTreeUpdateBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.btree.generated;
public class BTreeUpdateBench_jmhType_B3 extends BTreeUpdateBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_baseline_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.AbstractTypeByteSourceDecodingBench_jmhType;
public final class AbstractTypeByteSourceDecodingBench_baseline_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_fromComparableBytes_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.AbstractTypeByteSourceDecodingBench_jmhType;
public final class AbstractTypeByteSourceDecodingBench_fromComparableBytes_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class AbstractTypeByteSourceDecodingBench_jmhType extends AbstractTypeByteSourceDecodingBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.AbstractTypeByteSourceDecodingBench;
public class AbstractTypeByteSourceDecodingBench_jmhType_B1 extends org.apache.cassandra.test.microbench.AbstractTypeByteSourceDecodingBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class AbstractTypeByteSourceDecodingBench_jmhType_B2 extends AbstractTypeByteSourceDecodingBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<AbstractTypeByteSourceDecodingBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AbstractTypeByteSourceDecodingBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<AbstractTypeByteSourceDecodingBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AbstractTypeByteSourceDecodingBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<AbstractTypeByteSourceDecodingBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AbstractTypeByteSourceDecodingBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<AbstractTypeByteSourceDecodingBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AbstractTypeByteSourceDecodingBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<AbstractTypeByteSourceDecodingBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AbstractTypeByteSourceDecodingBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<AbstractTypeByteSourceDecodingBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AbstractTypeByteSourceDecodingBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AbstractTypeByteSourceDecodingBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class AbstractTypeByteSourceDecodingBench_jmhType_B3 extends AbstractTypeByteSourceDecodingBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_booleanFromBooleanSupplier_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.AutoBoxingBench_jmhType;
public final class AutoBoxingBench_booleanFromBooleanSupplier_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_booleanFromPlainSupplier_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.AutoBoxingBench_jmhType;
public final class AutoBoxingBench_booleanFromPlainSupplier_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_intFromIntSupplier_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.AutoBoxingBench_jmhType;
public final class AutoBoxingBench_intFromIntSupplier_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_intFromPlainSupplier_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.AutoBoxingBench_jmhType;
public final class AutoBoxingBench_intFromPlainSupplier_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class AutoBoxingBench_jmhType extends AutoBoxingBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.AutoBoxingBench;
public class AutoBoxingBench_jmhType_B1 extends org.apache.cassandra.test.microbench.AutoBoxingBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class AutoBoxingBench_jmhType_B2 extends AutoBoxingBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<AutoBoxingBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AutoBoxingBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<AutoBoxingBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AutoBoxingBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<AutoBoxingBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AutoBoxingBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<AutoBoxingBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AutoBoxingBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<AutoBoxingBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AutoBoxingBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<AutoBoxingBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(AutoBoxingBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/AutoBoxingBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class AutoBoxingBench_jmhType_B3 extends AutoBoxingBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_buildTreeTest_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.BTreeBuildBench_jmhType;
public final class BTreeBuildBench_buildTreeTest_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class BTreeBuildBench_jmhType extends BTreeBuildBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.BTreeBuildBench;
public class BTreeBuildBench_jmhType_B1 extends org.apache.cassandra.test.microbench.BTreeBuildBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeBuildBench_jmhType_B2 extends BTreeBuildBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeBuildBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeBuildBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class BTreeBuildBench_jmhType_B3 extends BTreeBuildBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeBuildBench_treeBuilderRecycleAdd_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.BTreeBuildBench_jmhType;
public final class BTreeBuildBench_treeBuilderRecycleAdd_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class BTreeSearchIteratorBench_jmhType extends BTreeSearchIteratorBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.BTreeSearchIteratorBench;
public class BTreeSearchIteratorBench_jmhType_B1 extends org.apache.cassandra.test.microbench.BTreeSearchIteratorBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BTreeSearchIteratorBench_jmhType_B2 extends BTreeSearchIteratorBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BTreeSearchIteratorBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeSearchIteratorBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BTreeSearchIteratorBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeSearchIteratorBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeSearchIteratorBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeSearchIteratorBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeSearchIteratorBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeSearchIteratorBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BTreeSearchIteratorBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeSearchIteratorBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BTreeSearchIteratorBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BTreeSearchIteratorBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class BTreeSearchIteratorBench_jmhType_B3 extends BTreeSearchIteratorBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_searchFound_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.BTreeSearchIteratorBench_jmhType;
public final class BTreeSearchIteratorBench_searchFound_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BTreeSearchIteratorBench_searchNotFound_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.BTreeSearchIteratorBench_jmhType;
public final class BTreeSearchIteratorBench_searchNotFound_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_bench_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.BatchStatementBench_jmhType;
public final class BatchStatementBench_bench_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class BatchStatementBench_jmhType extends BatchStatementBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.BatchStatementBench;
public class BatchStatementBench_jmhType_B1 extends org.apache.cassandra.test.microbench.BatchStatementBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BatchStatementBench_jmhType_B2 extends BatchStatementBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BatchStatementBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BatchStatementBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BatchStatementBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BatchStatementBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BatchStatementBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BatchStatementBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BatchStatementBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BatchStatementBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BatchStatementBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BatchStatementBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BatchStatementBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BatchStatementBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BatchStatementBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class BatchStatementBench_jmhType_B3 extends BatchStatementBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class BloomFilterSerializerBench_jmhType extends BloomFilterSerializerBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.BloomFilterSerializerBench;
public class BloomFilterSerializerBench_jmhType_B1 extends org.apache.cassandra.test.microbench.BloomFilterSerializerBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class BloomFilterSerializerBench_jmhType_B2 extends BloomFilterSerializerBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<BloomFilterSerializerBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BloomFilterSerializerBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<BloomFilterSerializerBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BloomFilterSerializerBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<BloomFilterSerializerBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BloomFilterSerializerBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<BloomFilterSerializerBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BloomFilterSerializerBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<BloomFilterSerializerBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BloomFilterSerializerBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<BloomFilterSerializerBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(BloomFilterSerializerBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class BloomFilterSerializerBench_jmhType_B3 extends BloomFilterSerializerBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/BloomFilterSerializerBench_serializationTest_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.BloomFilterSerializerBench_jmhType;
public final class BloomFilterSerializerBench_serializationTest_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class CacheLoaderBench_jmhType extends CacheLoaderBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.CacheLoaderBench;
public class CacheLoaderBench_jmhType_B1 extends org.apache.cassandra.test.microbench.CacheLoaderBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class CacheLoaderBench_jmhType_B2 extends CacheLoaderBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<CacheLoaderBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CacheLoaderBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<CacheLoaderBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CacheLoaderBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<CacheLoaderBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CacheLoaderBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<CacheLoaderBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CacheLoaderBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<CacheLoaderBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CacheLoaderBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<CacheLoaderBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CacheLoaderBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class CacheLoaderBench_jmhType_B3 extends CacheLoaderBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CacheLoaderBench_keyCacheLoadTest_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.CacheLoaderBench_jmhType;
public final class CacheLoaderBench_keyCacheLoadTest_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchCrc32NoIntrinsic_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ChecksumBench_jmhType;
public final class ChecksumBench_benchCrc32NoIntrinsic_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchCrc32_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ChecksumBench_jmhType;
public final class ChecksumBench_benchCrc32_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchHasherCrc32c_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ChecksumBench_jmhType;
public final class ChecksumBench_benchHasherCrc32c_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_benchPureJavaCrc32c_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ChecksumBench_jmhType;
public final class ChecksumBench_benchPureJavaCrc32c_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class ChecksumBench_jmhType extends ChecksumBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.ChecksumBench;
public class ChecksumBench_jmhType_B1 extends org.apache.cassandra.test.microbench.ChecksumBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class ChecksumBench_jmhType_B2 extends ChecksumBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<ChecksumBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ChecksumBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<ChecksumBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ChecksumBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<ChecksumBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ChecksumBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<ChecksumBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ChecksumBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<ChecksumBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ChecksumBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<ChecksumBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ChecksumBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ChecksumBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class ChecksumBench_jmhType_B3 extends ChecksumBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_compactTest_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.CompactionBench_jmhType;
public final class CompactionBench_compactTest_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class CompactionBench_jmhType extends CompactionBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.CompactionBench;
public class CompactionBench_jmhType_B1 extends org.apache.cassandra.test.microbench.CompactionBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class CompactionBench_jmhType_B2 extends CompactionBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<CompactionBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CompactionBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<CompactionBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CompactionBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<CompactionBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CompactionBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<CompactionBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CompactionBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<CompactionBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CompactionBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<CompactionBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(CompactionBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/CompactionBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class CompactionBench_jmhType_B3 extends CompactionBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class DiagnosticEventPersistenceBench_jmhType extends DiagnosticEventPersistenceBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.DiagnosticEventPersistenceBench;
public class DiagnosticEventPersistenceBench_jmhType_B1 extends org.apache.cassandra.test.microbench.DiagnosticEventPersistenceBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class DiagnosticEventPersistenceBench_jmhType_B2 extends DiagnosticEventPersistenceBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<DiagnosticEventPersistenceBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventPersistenceBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<DiagnosticEventPersistenceBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventPersistenceBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<DiagnosticEventPersistenceBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventPersistenceBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<DiagnosticEventPersistenceBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventPersistenceBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<DiagnosticEventPersistenceBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventPersistenceBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<DiagnosticEventPersistenceBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventPersistenceBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class DiagnosticEventPersistenceBench_jmhType_B3 extends DiagnosticEventPersistenceBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventPersistenceBench_persistEvents_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.DiagnosticEventPersistenceBench_jmhType;
public final class DiagnosticEventPersistenceBench_persistEvents_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class DiagnosticEventServiceBench_jmhType extends DiagnosticEventServiceBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.DiagnosticEventServiceBench;
public class DiagnosticEventServiceBench_jmhType_B1 extends org.apache.cassandra.test.microbench.DiagnosticEventServiceBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class DiagnosticEventServiceBench_jmhType_B2 extends DiagnosticEventServiceBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<DiagnosticEventServiceBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventServiceBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<DiagnosticEventServiceBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventServiceBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<DiagnosticEventServiceBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventServiceBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<DiagnosticEventServiceBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventServiceBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<DiagnosticEventServiceBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventServiceBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<DiagnosticEventServiceBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DiagnosticEventServiceBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class DiagnosticEventServiceBench_jmhType_B3 extends DiagnosticEventServiceBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DiagnosticEventServiceBench_publishEvents_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.DiagnosticEventServiceBench_jmhType;
public final class DiagnosticEventServiceBench_publishEvents_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_countFiles_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.DirectorySizerBench_jmhType;
public final class DirectorySizerBench_countFiles_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class DirectorySizerBench_jmhType extends DirectorySizerBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.DirectorySizerBench;
public class DirectorySizerBench_jmhType_B1 extends org.apache.cassandra.test.microbench.DirectorySizerBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class DirectorySizerBench_jmhType_B2 extends DirectorySizerBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<DirectorySizerBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DirectorySizerBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<DirectorySizerBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DirectorySizerBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<DirectorySizerBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DirectorySizerBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<DirectorySizerBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DirectorySizerBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<DirectorySizerBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DirectorySizerBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<DirectorySizerBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(DirectorySizerBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/DirectorySizerBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class DirectorySizerBench_jmhType_B3 extends DirectorySizerBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class FastThreadLocalBench_FastThreadLocalBenchState_jmhType extends FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.FastThreadLocalBench.FastThreadLocalBenchState;
public class FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B1 extends org.apache.cassandra.test.microbench.FastThreadLocalBench.FastThreadLocalBenchState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2 extends FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B3 extends FastThreadLocalBench_FastThreadLocalBenchState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_baseline_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.FastThreadLocalBench_jmhType;
import org.apache.cassandra.test.microbench.generated.FastThreadLocalBench_FastThreadLocalBenchState_jmhType;
public final class FastThreadLocalBench_baseline_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_fastThreadLocal_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.FastThreadLocalBench_jmhType;
import org.apache.cassandra.test.microbench.generated.FastThreadLocalBench_FastThreadLocalBenchState_jmhType;
public final class FastThreadLocalBench_fastThreadLocal_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class FastThreadLocalBench_jmhType extends FastThreadLocalBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.FastThreadLocalBench;
public class FastThreadLocalBench_jmhType_B1 extends org.apache.cassandra.test.microbench.FastThreadLocalBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class FastThreadLocalBench_jmhType_B2 extends FastThreadLocalBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<FastThreadLocalBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(FastThreadLocalBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class FastThreadLocalBench_jmhType_B3 extends FastThreadLocalBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/FastThreadLocalBench_threadLocal_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.FastThreadLocalBench_jmhType;
import org.apache.cassandra.test.microbench.generated.FastThreadLocalBench_FastThreadLocalBenchState_jmhType;
public final class FastThreadLocalBench_threadLocal_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_benchHasherMD5_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.HashingBench_jmhType;
public final class HashingBench_benchHasherMD5_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_benchHasherMurmur3_128_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.HashingBench_jmhType;
public final class HashingBench_benchHasherMurmur3_128_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_benchMessageDigestMD5_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.HashingBench_jmhType;
public final class HashingBench_benchMessageDigestMD5_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class HashingBench_jmhType extends HashingBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.HashingBench;
public class HashingBench_jmhType_B1 extends org.apache.cassandra.test.microbench.HashingBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class HashingBench_jmhType_B2 extends HashingBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<HashingBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(HashingBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<HashingBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(HashingBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<HashingBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(HashingBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<HashingBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(HashingBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<HashingBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(HashingBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<HashingBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(HashingBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/HashingBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class HashingBench_jmhType_B3 extends HashingBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_benchInsertToDEHR_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.LatencyTrackingBench_jmhType;
public final class LatencyTrackingBench_benchInsertToDEHR_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_benchLatencyMetricsWrite_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.LatencyTrackingBench_jmhType;
public final class LatencyTrackingBench_benchLatencyMetricsWrite_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class LatencyTrackingBench_jmhType extends LatencyTrackingBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.LatencyTrackingBench;
public class LatencyTrackingBench_jmhType_B1 extends org.apache.cassandra.test.microbench.LatencyTrackingBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class LatencyTrackingBench_jmhType_B2 extends LatencyTrackingBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<LatencyTrackingBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(LatencyTrackingBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<LatencyTrackingBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(LatencyTrackingBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<LatencyTrackingBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(LatencyTrackingBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<LatencyTrackingBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(LatencyTrackingBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<LatencyTrackingBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(LatencyTrackingBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<LatencyTrackingBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(LatencyTrackingBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/LatencyTrackingBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class LatencyTrackingBench_jmhType_B3 extends LatencyTrackingBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class MessageOutBench_jmhType extends MessageOutBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.MessageOutBench;
public class MessageOutBench_jmhType_B1 extends org.apache.cassandra.test.microbench.MessageOutBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class MessageOutBench_jmhType_B2 extends MessageOutBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<MessageOutBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MessageOutBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<MessageOutBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MessageOutBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<MessageOutBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MessageOutBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<MessageOutBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MessageOutBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<MessageOutBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MessageOutBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<MessageOutBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MessageOutBench_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class MessageOutBench_jmhType_B3 extends MessageOutBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_serialize40_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.MessageOutBench_jmhType;
public final class MessageOutBench_serialize40_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MessageOutBench_serializePre40_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.MessageOutBench_jmhType;
public final class MessageOutBench_serializePre40_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class MetadataCollectorBench_jmhType extends MetadataCollectorBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.MetadataCollectorBench;
public class MetadataCollectorBench_jmhType_B1 extends org.apache.cassandra.test.microbench.MetadataCollectorBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class MetadataCollectorBench_jmhType_B2 extends MetadataCollectorBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<MetadataCollectorBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MetadataCollectorBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<MetadataCollectorBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MetadataCollectorBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<MetadataCollectorBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MetadataCollectorBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<MetadataCollectorBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MetadataCollectorBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<MetadataCollectorBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MetadataCollectorBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<MetadataCollectorBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MetadataCollectorBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class MetadataCollectorBench_jmhType_B3 extends MetadataCollectorBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateCell_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.MetadataCollectorBench_jmhType;
public final class MetadataCollectorBench_updateCell_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateClusteringBound_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.MetadataCollectorBench_jmhType;
public final class MetadataCollectorBench_updateClusteringBound_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateClusteringBoundary_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.MetadataCollectorBench_jmhType;
public final class MetadataCollectorBench_updateClusteringBoundary_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MetadataCollectorBench_updateClustering_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.MetadataCollectorBench_jmhType;
public final class MetadataCollectorBench_updateClustering_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class MutationBench_ThreadState_jmhType extends MutationBench_ThreadState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.MutationBench.ThreadState;
public class MutationBench_ThreadState_jmhType_B1 extends org.apache.cassandra.test.microbench.MutationBench.ThreadState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class MutationBench_ThreadState_jmhType_B2 extends MutationBench_ThreadState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<MutationBench_ThreadState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_ThreadState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<MutationBench_ThreadState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_ThreadState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<MutationBench_ThreadState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_ThreadState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<MutationBench_ThreadState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_ThreadState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<MutationBench_ThreadState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_ThreadState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<MutationBench_ThreadState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_ThreadState_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_ThreadState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class MutationBench_ThreadState_jmhType_B3 extends MutationBench_ThreadState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_deserialize_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.MutationBench_jmhType;
import org.apache.cassandra.test.microbench.generated.MutationBench_ThreadState_jmhType;
public final class MutationBench_deserialize_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class MutationBench_jmhType extends MutationBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.MutationBench;
public class MutationBench_jmhType_B1 extends org.apache.cassandra.test.microbench.MutationBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class MutationBench_jmhType_B2 extends MutationBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<MutationBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<MutationBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<MutationBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<MutationBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<MutationBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<MutationBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(MutationBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class MutationBench_jmhType_B3 extends MutationBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/MutationBench_serialize_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.MutationBench_jmhType;
import org.apache.cassandra.test.microbench.generated.MutationBench_ThreadState_jmhType;
public final class MutationBench_serialize_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class OutputStreamBench_jmhType extends OutputStreamBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.OutputStreamBench;
public class OutputStreamBench_jmhType_B1 extends org.apache.cassandra.test.microbench.OutputStreamBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class OutputStreamBench_jmhType_B2 extends OutputStreamBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<OutputStreamBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(OutputStreamBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<OutputStreamBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(OutputStreamBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<OutputStreamBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(OutputStreamBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<OutputStreamBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(OutputStreamBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<OutputStreamBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(OutputStreamBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<OutputStreamBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(OutputStreamBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class OutputStreamBench_jmhType_B3 extends OutputStreamBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPByte_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testBDOSPByte_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPInt_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testBDOSPInt_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPLong_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testBDOSPLong_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBDOSPMixed_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testBDOSPMixed_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSByte_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testBOSByte_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSInt_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testBOSInt_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSLong_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testBOSLong_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testBOSMixed_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testBOSMixed_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMLargeLegacyWriteUTF_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testMLargeLegacyWriteUTF_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMLargeStringBDOSP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testMLargeStringBDOSP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMLargeStringBOS_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testMLargeStringBOS_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMSmallLegacyWriteUTF_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testMSmallLegacyWriteUTF_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMSmallStringBDOSP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testMSmallStringBDOSP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMSmallStringBOS_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testMSmallStringBOS_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMTinyLegacyWriteUTF_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testMTinyLegacyWriteUTF_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMTinyStringBDOSP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testMTinyStringBDOSP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testMTinyStringBOS_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testMTinyStringBOS_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testRLargeLegacyWriteUTF_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testRLargeLegacyWriteUTF_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testRLargeStringBDOSP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testRLargeStringBDOSP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testRLargeStringBOS_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testRLargeStringBOS_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testSmallLegacyWriteUTF_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testSmallLegacyWriteUTF_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testSmallStringBDOSP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testSmallStringBDOSP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testSmallStringBOS_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testSmallStringBOS_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testTinyLegacyWriteUTF_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testTinyLegacyWriteUTF_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testTinyStringBDOSP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testTinyStringBDOSP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/OutputStreamBench_testTinyStringBOS_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.OutputStreamBench_jmhType;
public final class OutputStreamBench_testTinyStringBOS_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class PendingRangesBench_jmhType extends PendingRangesBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.PendingRangesBench;
public class PendingRangesBench_jmhType_B1 extends org.apache.cassandra.test.microbench.PendingRangesBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class PendingRangesBench_jmhType_B2 extends PendingRangesBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<PendingRangesBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PendingRangesBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<PendingRangesBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PendingRangesBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<PendingRangesBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PendingRangesBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<PendingRangesBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PendingRangesBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<PendingRangesBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PendingRangesBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<PendingRangesBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PendingRangesBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class PendingRangesBench_jmhType_B3 extends PendingRangesBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_searchTokenForOldPendingRanges_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.PendingRangesBench_jmhType;
public final class PendingRangesBench_searchTokenForOldPendingRanges_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PendingRangesBench_searchToken_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.PendingRangesBench_jmhType;
public final class PendingRangesBench_searchToken_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_chunkedBuf_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.PreaggregatedByteBufsBench_jmhType;
public final class PreaggregatedByteBufsBench_chunkedBuf_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class PreaggregatedByteBufsBench_jmhType extends PreaggregatedByteBufsBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.PreaggregatedByteBufsBench;
public class PreaggregatedByteBufsBench_jmhType_B1 extends org.apache.cassandra.test.microbench.PreaggregatedByteBufsBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class PreaggregatedByteBufsBench_jmhType_B2 extends PreaggregatedByteBufsBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<PreaggregatedByteBufsBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PreaggregatedByteBufsBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<PreaggregatedByteBufsBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PreaggregatedByteBufsBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<PreaggregatedByteBufsBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PreaggregatedByteBufsBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<PreaggregatedByteBufsBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PreaggregatedByteBufsBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<PreaggregatedByteBufsBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PreaggregatedByteBufsBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<PreaggregatedByteBufsBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(PreaggregatedByteBufsBench_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class PreaggregatedByteBufsBench_jmhType_B3 extends PreaggregatedByteBufsBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/PreaggregatedByteBufsBench_oneBigBuf_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.PreaggregatedByteBufsBench_jmhType;
public final class PreaggregatedByteBufsBench_oneBigBuf_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class ReadWriteTest_jmhType extends ReadWriteTest_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.ReadWriteTest;
public class ReadWriteTest_jmhType_B1 extends org.apache.cassandra.test.microbench.ReadWriteTest {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class ReadWriteTest_jmhType_B2 extends ReadWriteTest_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<ReadWriteTest_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadWriteTest_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<ReadWriteTest_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadWriteTest_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<ReadWriteTest_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadWriteTest_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<ReadWriteTest_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadWriteTest_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<ReadWriteTest_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadWriteTest_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<ReadWriteTest_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadWriteTest_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class ReadWriteTest_jmhType_B3 extends ReadWriteTest_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_read_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ReadWriteTest_jmhType;
public final class ReadWriteTest_read_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ReadWriteTest_write_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ReadWriteTest_jmhType;
public final class ReadWriteTest_write_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class Sample_ThreadState_jmhType extends Sample_ThreadState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.Sample.ThreadState;
public class Sample_ThreadState_jmhType_B1 extends org.apache.cassandra.test.microbench.Sample.ThreadState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class Sample_ThreadState_jmhType_B2 extends Sample_ThreadState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<Sample_ThreadState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_ThreadState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<Sample_ThreadState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_ThreadState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<Sample_ThreadState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_ThreadState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<Sample_ThreadState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_ThreadState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<Sample_ThreadState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_ThreadState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<Sample_ThreadState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_ThreadState_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_ThreadState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class Sample_ThreadState_jmhType_B3 extends Sample_ThreadState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class Sample_jmhType extends Sample_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.Sample;
public class Sample_jmhType_B1 extends org.apache.cassandra.test.microbench.Sample {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class Sample_jmhType_B2 extends Sample_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<Sample_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<Sample_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<Sample_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<Sample_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<Sample_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<Sample_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(Sample_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class Sample_jmhType_B3 extends Sample_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_lz4_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.Sample_jmhType;
import org.apache.cassandra.test.microbench.generated.Sample_ThreadState_jmhType;
public final class Sample_lz4_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/Sample_snappy_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.Sample_jmhType;
import org.apache.cassandra.test.microbench.generated.Sample_ThreadState_jmhType;
public final class Sample_snappy_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class StreamingTombstoneHistogramBuilderBench_jmhType extends StreamingTombstoneHistogramBuilderBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.StreamingTombstoneHistogramBuilderBench;
public class StreamingTombstoneHistogramBuilderBench_jmhType_B1 extends org.apache.cassandra.test.microbench.StreamingTombstoneHistogramBuilderBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class StreamingTombstoneHistogramBuilderBench_jmhType_B2 extends StreamingTombstoneHistogramBuilderBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<StreamingTombstoneHistogramBuilderBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StreamingTombstoneHistogramBuilderBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<StreamingTombstoneHistogramBuilderBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StreamingTombstoneHistogramBuilderBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<StreamingTombstoneHistogramBuilderBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StreamingTombstoneHistogramBuilderBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<StreamingTombstoneHistogramBuilderBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StreamingTombstoneHistogramBuilderBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<StreamingTombstoneHistogramBuilderBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StreamingTombstoneHistogramBuilderBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<StreamingTombstoneHistogramBuilderBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StreamingTombstoneHistogramBuilderBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class StreamingTombstoneHistogramBuilderBench_jmhType_B3 extends StreamingTombstoneHistogramBuilderBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StreamingTombstoneHistogramBuilderBench_test_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StreamingTombstoneHistogramBuilderBench_jmhType;
public final class StreamingTombstoneHistogramBuilderBench_test_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class StringsEncodeBench_jmhType extends StringsEncodeBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.StringsEncodeBench;
public class StringsEncodeBench_jmhType_B1 extends org.apache.cassandra.test.microbench.StringsEncodeBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class StringsEncodeBench_jmhType_B2 extends StringsEncodeBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<StringsEncodeBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StringsEncodeBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<StringsEncodeBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StringsEncodeBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<StringsEncodeBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StringsEncodeBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<StringsEncodeBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StringsEncodeBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<StringsEncodeBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StringsEncodeBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<StringsEncodeBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(StringsEncodeBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class StringsEncodeBench_jmhType_B3 extends StringsEncodeBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_sizeOfAsciiString_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_sizeOfAsciiString_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_sizeOfString_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_sizeOfString_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongTextAsASCII_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_writeLongTextAsASCII_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongTextWithExactSizeSkipCalc_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_writeLongTextWithExactSizeSkipCalc_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongTextWithExactSize_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_writeLongTextWithExactSize_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeLongText_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_writeLongText_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortTextAsASCII_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_writeShortTextAsASCII_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortTextWithExactSizeSkipCalc_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_writeShortTextWithExactSizeSkipCalc_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortTextWithExactSize_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_writeShortTextWithExactSize_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/StringsEncodeBench_writeShortText_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.StringsEncodeBench_jmhType;
public final class StringsEncodeBench_writeShortText_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class TimedMonitorBench_ThreadState_jmhType extends TimedMonitorBench_ThreadState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.TimedMonitorBench.ThreadState;
public class TimedMonitorBench_ThreadState_jmhType_B1 extends org.apache.cassandra.test.microbench.TimedMonitorBench.ThreadState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class TimedMonitorBench_ThreadState_jmhType_B2 extends TimedMonitorBench_ThreadState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_ThreadState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_ThreadState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_ThreadState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_ThreadState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_ThreadState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_ThreadState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_ThreadState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_ThreadState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_ThreadState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_ThreadState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_ThreadState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_ThreadState_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_ThreadState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class TimedMonitorBench_ThreadState_jmhType_B3 extends TimedMonitorBench_ThreadState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class TimedMonitorBench_jmhType extends TimedMonitorBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.TimedMonitorBench;
public class TimedMonitorBench_jmhType_B1 extends org.apache.cassandra.test.microbench.TimedMonitorBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class TimedMonitorBench_jmhType_B2 extends TimedMonitorBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<TimedMonitorBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(TimedMonitorBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class TimedMonitorBench_jmhType_B3 extends TimedMonitorBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_shared_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.TimedMonitorBench_jmhType;
public final class TimedMonitorBench_shared_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/TimedMonitorBench_unshared_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.TimedMonitorBench_ThreadState_jmhType;
import org.apache.cassandra.test.microbench.generated.TimedMonitorBench_jmhType;
public final class TimedMonitorBench_unshared_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class VIntCodingBench_jmhType extends VIntCodingBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.VIntCodingBench;
public class VIntCodingBench_jmhType_B1 extends org.apache.cassandra.test.microbench.VIntCodingBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class VIntCodingBench_jmhType_B2 extends VIntCodingBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<VIntCodingBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(VIntCodingBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<VIntCodingBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(VIntCodingBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<VIntCodingBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(VIntCodingBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<VIntCodingBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(VIntCodingBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<VIntCodingBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(VIntCodingBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<VIntCodingBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(VIntCodingBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class VIntCodingBench_jmhType_B3 extends VIntCodingBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testComputeUnsignedVIntSize_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testComputeUnsignedVIntSize_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite1ByteBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite1ByteBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite1ByteDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite1ByteDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite2BytesBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite2BytesBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite2BytesDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite2BytesDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite3BytesBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite3BytesBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite3BytesDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite3BytesDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite4BytesBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite4BytesBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite4BytesDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite4BytesDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite5BytesBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite5BytesBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite5BytesDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite5BytesDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite6BytesBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite6BytesBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite6BytesDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite6BytesDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite7BytesBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite7BytesBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite7BytesDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite7BytesDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite8BytesBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite8BytesBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite8BytesDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite8BytesDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite9BytesBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite9BytesBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWrite9BytesDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWrite9BytesDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWriteRandomLongBB_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWriteRandomLongBB_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/VIntCodingBench_testWriteRandomLongDOP_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.VIntCodingBench_jmhType;
public final class VIntCodingBench_testWriteRandomLongDOP_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class ZeroCopyStreamingBenchmark_BenchmarkState_jmhType extends ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark.BenchmarkState;
public class ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B1 extends org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark.BenchmarkState {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2 extends ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B3 extends ZeroCopyStreamingBenchmark_BenchmarkState_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_blockStreamReader_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ZeroCopyStreamingBenchmark_BenchmarkState_jmhType;
import org.apache.cassandra.test.microbench.generated.ZeroCopyStreamingBenchmark_jmhType;
public final class ZeroCopyStreamingBenchmark_blockStreamReader_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_blockStreamWriter_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ZeroCopyStreamingBenchmark_BenchmarkState_jmhType;
import org.apache.cassandra.test.microbench.generated.ZeroCopyStreamingBenchmark_jmhType;
public final class ZeroCopyStreamingBenchmark_blockStreamWriter_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class ZeroCopyStreamingBenchmark_jmhType extends ZeroCopyStreamingBenchmark_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark;
public class ZeroCopyStreamingBenchmark_jmhType_B1 extends org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class ZeroCopyStreamingBenchmark_jmhType_B2 extends ZeroCopyStreamingBenchmark_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<ZeroCopyStreamingBenchmark_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ZeroCopyStreamingBenchmark_jmhType_B2.class, "tearInvocationMutex");

}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;
public class ZeroCopyStreamingBenchmark_jmhType_B3 extends ZeroCopyStreamingBenchmark_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_partialStreamReader_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ZeroCopyStreamingBenchmark_BenchmarkState_jmhType;
import org.apache.cassandra.test.microbench.generated.ZeroCopyStreamingBenchmark_jmhType;
public final class ZeroCopyStreamingBenchmark_partialStreamReader_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/generated/ZeroCopyStreamingBenchmark_partialStreamWriter_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.generated.ZeroCopyStreamingBenchmark_BenchmarkState_jmhType;
import org.apache.cassandra.test.microbench.generated.ZeroCopyStreamingBenchmark_jmhType;
public final class ZeroCopyStreamingBenchmark_partialStreamWriter_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
public class ReadTestSmallPartitions_jmhType extends ReadTestSmallPartitions_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
import org.apache.cassandra.test.microbench.instance.ReadTestSmallPartitions;
public class ReadTestSmallPartitions_jmhType_B1 extends org.apache.cassandra.test.microbench.instance.ReadTestSmallPartitions {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class ReadTestSmallPartitions_jmhType_B2 extends ReadTestSmallPartitions_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<ReadTestSmallPartitions_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestSmallPartitions_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<ReadTestSmallPartitions_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestSmallPartitions_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<ReadTestSmallPartitions_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestSmallPartitions_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<ReadTestSmallPartitions_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestSmallPartitions_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<ReadTestSmallPartitions_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestSmallPartitions_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<ReadTestSmallPartitions_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestSmallPartitions_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
public class ReadTestSmallPartitions_jmhType_B3 extends ReadTestSmallPartitions_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readFixed_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestSmallPartitions_jmhType;
public final class ReadTestSmallPartitions_readFixed_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readOutside_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestSmallPartitions_jmhType;
public final class ReadTestSmallPartitions_readOutside_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readRandomInside_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestSmallPartitions_jmhType;
public final class ReadTestSmallPartitions_readRandomInside_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestSmallPartitions_readRandomWOutside_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestSmallPartitions_jmhType;
public final class ReadTestSmallPartitions_readRandomWOutside_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
public class ReadTestWidePartitions_jmhType extends ReadTestWidePartitions_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
import org.apache.cassandra.test.microbench.instance.ReadTestWidePartitions;
public class ReadTestWidePartitions_jmhType_B1 extends org.apache.cassandra.test.microbench.instance.ReadTestWidePartitions {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class ReadTestWidePartitions_jmhType_B2 extends ReadTestWidePartitions_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<ReadTestWidePartitions_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestWidePartitions_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<ReadTestWidePartitions_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestWidePartitions_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<ReadTestWidePartitions_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestWidePartitions_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<ReadTestWidePartitions_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestWidePartitions_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<ReadTestWidePartitions_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestWidePartitions_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<ReadTestWidePartitions_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ReadTestWidePartitions_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
public class ReadTestWidePartitions_jmhType_B3 extends ReadTestWidePartitions_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readFixed_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestWidePartitions_jmhType;
public final class ReadTestWidePartitions_readFixed_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readGreaterMatch_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestWidePartitions_jmhType;
public final class ReadTestWidePartitions_readGreaterMatch_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readGreater_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestWidePartitions_jmhType;
public final class ReadTestWidePartitions_readGreater_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readOutside_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestWidePartitions_jmhType;
public final class ReadTestWidePartitions_readOutside_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readRandomInside_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestWidePartitions_jmhType;
public final class ReadTestWidePartitions_readRandomInside_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readRandomWOutside_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestWidePartitions_jmhType;
public final class ReadTestWidePartitions_readRandomWOutside_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readReversedMatch_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestWidePartitions_jmhType;
public final class ReadTestWidePartitions_readReversedMatch_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/ReadTestWidePartitions_readReversed_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.ReadTestWidePartitions_jmhType;
public final class ReadTestWidePartitions_readReversed_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
public class WriteTest_jmhType extends WriteTest_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
import org.apache.cassandra.test.microbench.instance.WriteTest;
public class WriteTest_jmhType_B1 extends org.apache.cassandra.test.microbench.instance.WriteTest {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class WriteTest_jmhType_B2 extends WriteTest_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<WriteTest_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(WriteTest_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<WriteTest_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(WriteTest_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<WriteTest_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(WriteTest_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<WriteTest_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(WriteTest_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<WriteTest_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(WriteTest_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<WriteTest_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(WriteTest_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;
public class WriteTest_jmhType_B3 extends WriteTest_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/instance/generated/WriteTest_writeTable_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.instance.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.instance.generated.WriteTest_jmhType;
public final class WriteTest_writeTable_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_consumeEntries_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.ComparisonReadBench_jmhType;
public final class ComparisonReadBench_consumeEntries_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_consumeValues_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.ComparisonReadBench_jmhType;
public final class ComparisonReadBench_consumeValues_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_getByIterateValueSlice_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.ComparisonReadBench_jmhType;
public final class ComparisonReadBench_getByIterateValueSlice_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_getRandom_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.ComparisonReadBench_jmhType;
public final class ComparisonReadBench_getRandom_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_iterateEntries_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.ComparisonReadBench_jmhType;
public final class ComparisonReadBench_iterateEntries_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_iterateValuesLimited_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.ComparisonReadBench_jmhType;
public final class ComparisonReadBench_iterateValuesLimited_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_iterateValues_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.ComparisonReadBench_jmhType;
public final class ComparisonReadBench_iterateValues_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
public class ComparisonReadBench_jmhType extends ComparisonReadBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
import org.apache.cassandra.test.microbench.tries.ComparisonReadBench;
public class ComparisonReadBench_jmhType_B1 extends org.apache.cassandra.test.microbench.tries.ComparisonReadBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class ComparisonReadBench_jmhType_B2 extends ComparisonReadBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<ComparisonReadBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ComparisonReadBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<ComparisonReadBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ComparisonReadBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<ComparisonReadBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ComparisonReadBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<ComparisonReadBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ComparisonReadBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<ComparisonReadBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ComparisonReadBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<ComparisonReadBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(ComparisonReadBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/ComparisonReadBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
public class ComparisonReadBench_jmhType_B3 extends ComparisonReadBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_consumeEntries_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieReadBench_jmhType;
public final class InMemoryTrieReadBench_consumeEntries_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_consumeValues_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieReadBench_jmhType;
public final class InMemoryTrieReadBench_consumeValues_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_getRandom_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieReadBench_jmhType;
public final class InMemoryTrieReadBench_getRandom_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateEntries_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieReadBench_jmhType;
public final class InMemoryTrieReadBench_iterateEntries_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateValuesLimited_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieReadBench_jmhType;
public final class InMemoryTrieReadBench_iterateValuesLimited_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateValuesUnordered_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieReadBench_jmhType;
public final class InMemoryTrieReadBench_iterateValuesUnordered_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_iterateValues_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieReadBench_jmhType;
public final class InMemoryTrieReadBench_iterateValues_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
public class InMemoryTrieReadBench_jmhType extends InMemoryTrieReadBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
import org.apache.cassandra.test.microbench.tries.InMemoryTrieReadBench;
public class InMemoryTrieReadBench_jmhType_B1 extends org.apache.cassandra.test.microbench.tries.InMemoryTrieReadBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class InMemoryTrieReadBench_jmhType_B2 extends InMemoryTrieReadBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<InMemoryTrieReadBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieReadBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<InMemoryTrieReadBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieReadBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<InMemoryTrieReadBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieReadBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<InMemoryTrieReadBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieReadBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<InMemoryTrieReadBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieReadBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<InMemoryTrieReadBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieReadBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
public class InMemoryTrieReadBench_jmhType_B3 extends InMemoryTrieReadBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieReadBench_processEntries_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieReadBench_jmhType;
public final class InMemoryTrieReadBench_processEntries_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateEntries_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieUnionBench_jmhType;
public final class InMemoryTrieUnionBench_iterateEntries_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateValuesLimited_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieUnionBench_jmhType;
public final class InMemoryTrieUnionBench_iterateValuesLimited_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateValuesUnordered_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieUnionBench_jmhType;
public final class InMemoryTrieUnionBench_iterateValuesUnordered_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_iterateValues_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieUnionBench_jmhType;
public final class InMemoryTrieUnionBench_iterateValues_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
public class InMemoryTrieUnionBench_jmhType extends InMemoryTrieUnionBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
import org.apache.cassandra.test.microbench.tries.InMemoryTrieUnionBench;
public class InMemoryTrieUnionBench_jmhType_B1 extends org.apache.cassandra.test.microbench.tries.InMemoryTrieUnionBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class InMemoryTrieUnionBench_jmhType_B2 extends InMemoryTrieUnionBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<InMemoryTrieUnionBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieUnionBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<InMemoryTrieUnionBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieUnionBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<InMemoryTrieUnionBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieUnionBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<InMemoryTrieUnionBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieUnionBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<InMemoryTrieUnionBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieUnionBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<InMemoryTrieUnionBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieUnionBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieUnionBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
public class InMemoryTrieUnionBench_jmhType_B3 extends InMemoryTrieUnionBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_applyRandom_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieWriteBench_jmhType;
public final class InMemoryTrieWriteBench_applyRandom_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_applySequential_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieWriteBench_jmhType;
public final class InMemoryTrieWriteBench_applySequential_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
public class InMemoryTrieWriteBench_jmhType extends InMemoryTrieWriteBench_jmhType_B3 {
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType_B1.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
import org.apache.cassandra.test.microbench.tries.InMemoryTrieWriteBench;
public class InMemoryTrieWriteBench_jmhType_B1 extends org.apache.cassandra.test.microbench.tries.InMemoryTrieWriteBench {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType_B2.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
public class InMemoryTrieWriteBench_jmhType_B2 extends InMemoryTrieWriteBench_jmhType_B1 {
    public volatile int setupTrialMutex;
    public volatile int tearTrialMutex;
    public final static AtomicIntegerFieldUpdater<InMemoryTrieWriteBench_jmhType_B2> setupTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieWriteBench_jmhType_B2.class, "setupTrialMutex");
    public final static AtomicIntegerFieldUpdater<InMemoryTrieWriteBench_jmhType_B2> tearTrialMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieWriteBench_jmhType_B2.class, "tearTrialMutex");

    public volatile int setupIterationMutex;
    public volatile int tearIterationMutex;
    public final static AtomicIntegerFieldUpdater<InMemoryTrieWriteBench_jmhType_B2> setupIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieWriteBench_jmhType_B2.class, "setupIterationMutex");
    public final static AtomicIntegerFieldUpdater<InMemoryTrieWriteBench_jmhType_B2> tearIterationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieWriteBench_jmhType_B2.class, "tearIterationMutex");

    public volatile int setupInvocationMutex;
    public volatile int tearInvocationMutex;
    public final static AtomicIntegerFieldUpdater<InMemoryTrieWriteBench_jmhType_B2> setupInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieWriteBench_jmhType_B2.class, "setupInvocationMutex");
    public final static AtomicIntegerFieldUpdater<InMemoryTrieWriteBench_jmhType_B2> tearInvocationMutexUpdater = AtomicIntegerFieldUpdater.newUpdater(InMemoryTrieWriteBench_jmhType_B2.class, "tearInvocationMutex");

    public volatile boolean readyTrial;
    public volatile boolean readyIteration;
    public volatile boolean readyInvocation;
}

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_jmhType_B3.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;
public class InMemoryTrieWriteBench_jmhType_B3 extends InMemoryTrieWriteBench_jmhType_B2 {
    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;
    boolean p208, p209, p210, p211, p212, p213, p214, p215, p216, p217, p218, p219, p220, p221, p222, p223;
    boolean p224, p225, p226, p227, p228, p229, p230, p231, p232, p233, p234, p235, p236, p237, p238, p239;
    boolean p240, p241, p242, p243, p244, p245, p246, p247, p248, p249, p250, p251, p252, p253, p254, p255;
}


 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_putRandom_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieWriteBench_jmhType;
public final class InMemoryTrieWriteBench_putRandom_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/classes/org/apache/cassandra/test/microbench/tries/generated/InMemoryTrieWriteBench_putSequential_jmhTest.java
 =======================================================================
package org.apache.cassandra.test.microbench.tries.generated;

import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.Collection;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import org.openjdk.jmh.annotations.CompilerControl;
import org.openjdk.jmh.runner.InfraControl;
import org.openjdk.jmh.infra.ThreadParams;
import org.openjdk.jmh.results.BenchmarkTaskResult;
import org.openjdk.jmh.results.Result;
import org.openjdk.jmh.results.ThroughputResult;
import org.openjdk.jmh.results.AverageTimeResult;
import org.openjdk.jmh.results.SampleTimeResult;
import org.openjdk.jmh.results.SingleShotResult;
import org.openjdk.jmh.util.SampleBuffer;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.annotations.Fork;
import org.openjdk.jmh.annotations.Measurement;
import org.openjdk.jmh.annotations.Threads;
import org.openjdk.jmh.annotations.Warmup;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.results.RawResults;
import org.openjdk.jmh.results.ResultRole;
import java.lang.reflect.Field;
import org.openjdk.jmh.infra.BenchmarkParams;
import org.openjdk.jmh.infra.IterationParams;
import org.openjdk.jmh.infra.Blackhole;
import org.openjdk.jmh.infra.Control;
import org.openjdk.jmh.results.ScalarResult;
import org.openjdk.jmh.results.AggregationPolicy;
import org.openjdk.jmh.runner.FailureAssistException;

import org.apache.cassandra.test.microbench.tries.generated.InMemoryTrieWriteBench_jmhType;
public final class InMemoryTrieWriteBench_putSequential_jmhTest {

    boolean p000, p001, p002, p003, p004, p005, p006, p007, p008, p009, p010, p011, p012, p013, p014, p015;
    boolean p016, p017, p018, p019, p020, p021, p022, p023, p024, p025, p026, p027, p028, p029, p030, p031;
    boolean p032, p033, p034, p035, p036, p037, p038, p039, p040, p041, p042, p043, p044, p045, p046, p047;
    boolean p048, p049, p050, p051, p052, p053, p054, p055, p056, p057, p058, p059, p060, p061, p062, p063;
    boolean p064, p065, p066, p067, p068, p069, p070, p071, p072, p073, p074, p075, p076, p077, p078, p079;
    boolean p080, p081, p082, p083, p084, p085, p086, p087, p088, p089, p090, p091, p092, p093, p094, p095;
    boolean p096, p097, p098, p099, p100, p101, p102, p103, p104, p105, p106, p107, p108, p109, p110, p111;
    boolean p112, p113, p114, p115, p116, p117, p118, p119, p120, p121, p122, p123, p124, p125, p126, p127;
    boolean p128, p129, p130, p131, p132, p133, p134, p135, p136, p137, p138, p139, p140, p141, p142, p143;
    boolean p144, p145, p146, p147, p148, p149, p150, p151, p152, p153, p154, p155, p156, p157, p158, p159;
    boolean p160, p161, p162, p163, p164, p165, p166, p167, p168, p169, p170, p171, p172, p173, p174, p175;
    boolean p176, p177, p178, p179, p180, p181, p182, p183, p184, p185, p186, p187, p188, p189, p190, p191;
    boolean p192, p193, p194, p195, p196, p197, p198, p199, p200, p201, p202, p203, p204, p205, p206, p207;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/build/test/lib/jars/junit-bom-5.6.0.pom
 =======================================================================
<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!-- This module was also published with a richer model, Gradle metadata,  -->
  <!-- which should be used instead. Do not delete the following line which  -->
  <!-- is to indicate to Gradle or any Gradle module metadata file consumer  -->
  <!-- that they should prefer consuming it instead. -->
  <!-- do_not_remove: published-with-gradle-metadata -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.junit</groupId>
  <artifactId>junit-bom</artifactId>
  <version>5.6.0</version>
  <packaging>pom</packaging>
  <name>JUnit 5 (Bill of Materials)</name>
  <description>This Bill of Materials POM can be used to ease dependency management when referencing multiple JUnit artifacts using Gradle or Maven.</description>
  <url>https://junit.org/junit5/</url>
  <licenses>
    <license>
      <name>Eclipse Public License v2.0</name>
      <url>https://www.eclipse.org/legal/epl-v20.html</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>bechte</id>
      <name>Stefan Bechtold</name>
      <email>stefan.bechtold@me.com</email>
    </developer>
    <developer>
      <id>jlink</id>
      <name>Johannes Link</name>
      <email>business@johanneslink.net</email>
    </developer>
    <developer>
      <id>marcphilipp</id>
      <name>Marc Philipp</name>
      <email>mail@marcphilipp.de</email>
    </developer>
    <developer>
      <id>mmerdes</id>
      <name>Matthias Merdes</name>
      <email>Matthias.Merdes@heidelberg-mobil.com</email>
    </developer>
    <developer>
      <id>sbrannen</id>
      <name>Sam Brannen</name>
      <email>sam@sambrannen.com</email>
    </developer>
    <developer>
      <id>sormuras</id>

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/CqlLexer.java
 =======================================================================
// $ANTLR 3.5.2 Cql__.g 2023-08-09 16:01:04

    package org.apache.cassandra.cql3;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class CqlLexer extends Lexer {
	public static final int EOF=-1;
	public static final int T__197=197;
	public static final int T__198=198;
	public static final int T__199=199;
	public static final int T__200=200;
	public static final int T__201=201;
	public static final int T__202=202;
	public static final int T__203=203;
	public static final int T__204=204;
	public static final int T__205=205;
	public static final int T__206=206;
	public static final int T__207=207;
	public static final int T__208=208;
	public static final int T__209=209;
	public static final int T__210=210;
	public static final int T__211=211;
	public static final int T__212=212;
	public static final int T__213=213;
	public static final int T__214=214;
	public static final int T__215=215;
	public static final int T__216=216;
	public static final int T__217=217;
	public static final int T__218=218;
	public static final int T__219=219;
	public static final int T__220=220;
	public static final int A=4;
	public static final int B=5;
	public static final int BOOLEAN=6;
	public static final int C=7;
	public static final int COMMENT=8;
	public static final int D=9;
	public static final int DIGIT=10;
	public static final int DURATION=11;
	public static final int DURATION_UNIT=12;
	public static final int E=13;
	public static final int EMPTY_QUOTED_NAME=14;
	public static final int EXPONENT=15;
	public static final int F=16;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/CqlParser.java
 =======================================================================
// $ANTLR 3.5.2 /Users/lei.fu/java/mca/cassandra/src/antlr/Cql.g 2023-08-09 16:01:02

    package org.apache.cassandra.cql3;

    import java.util.Collections;
    import java.util.EnumSet;
    import java.util.HashSet;
    import java.util.LinkedHashMap;
    import java.util.List;
    import java.util.Map;
    import java.util.Set;

    import org.apache.cassandra.auth.*;
    import org.apache.cassandra.cql3.conditions.*;
    import org.apache.cassandra.cql3.functions.*;
    import org.apache.cassandra.cql3.restrictions.CustomIndexExpression;
    import org.apache.cassandra.cql3.selection.*;
    import org.apache.cassandra.cql3.statements.*;
    import org.apache.cassandra.cql3.statements.schema.*;
    import org.apache.cassandra.exceptions.ConfigurationException;
    import org.apache.cassandra.exceptions.InvalidRequestException;
    import org.apache.cassandra.exceptions.SyntaxException;
    import org.apache.cassandra.schema.ColumnMetadata;
    import org.apache.cassandra.utils.Pair;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class CqlParser extends Parser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "B", "BOOLEAN", "C", "COMMENT", 
		"D", "DIGIT", "DURATION", "DURATION_UNIT", "E", "EMPTY_QUOTED_NAME", "EXPONENT", 
		"F", "FLOAT", "G", "H", "HEX", "HEXNUMBER", "I", "IDENT", "INTEGER", "J", 
		"K", "K_ACCESS", "K_ADD", "K_AGGREGATE", "K_AGGREGATES", "K_ALL", "K_ALLOW", 
		"K_ALTER", "K_AND", "K_APPLY", "K_AS", "K_ASC", "K_ASCII", "K_AUTHORIZE", 
		"K_BATCH", "K_BEGIN", "K_BIGINT", "K_BLOB", "K_BOOLEAN", "K_BY", "K_CALLED", 
		"K_CAST", "K_CLUSTER", "K_CLUSTERING", "K_COLUMNFAMILY", "K_COMPACT", 
		"K_CONTAINS", "K_COUNT", "K_COUNTER", "K_CREATE", "K_CUSTOM", "K_DATACENTERS", 
		"K_DATE", "K_DECIMAL", "K_DEFAULT", "K_DELETE", "K_DESC", "K_DESCRIBE", 
		"K_DISTINCT", "K_DOUBLE", "K_DROP", "K_DURATION", "K_ENTRIES", "K_EXECUTE", 
		"K_EXISTS", "K_FILTERING", "K_FINALFUNC", "K_FLOAT", "K_FROM", "K_FROZEN", 
		"K_FULL", "K_FUNCTION", "K_FUNCTIONS", "K_GRANT", "K_GROUP", "K_HASHED", 
		"K_IF", "K_IN", "K_INDEX", "K_INET", "K_INITCOND", "K_INPUT", "K_INSERT", 
		"K_INT", "K_INTERNALS", "K_INTO", "K_IS", "K_JSON", "K_KEY", "K_KEYS", 
		"K_KEYSPACE", "K_KEYSPACES", "K_LANGUAGE", "K_LIKE", "K_LIMIT", "K_LIST", 
		"K_LOGIN", "K_MAP", "K_MATERIALIZED", "K_MAXWRITETIME", "K_MBEAN", "K_MBEANS", 

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/Cql_Lexer.java
 =======================================================================
// $ANTLR 3.5.2 Lexer.g 2023-08-09 16:01:05

    package org.apache.cassandra.cql3;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings("all")
public class Cql_Lexer extends Lexer {
	public static final int EOF=-1;
	public static final int T__197=197;
	public static final int T__198=198;
	public static final int T__199=199;
	public static final int T__200=200;
	public static final int T__201=201;
	public static final int T__202=202;
	public static final int T__203=203;
	public static final int T__204=204;
	public static final int T__205=205;
	public static final int T__206=206;
	public static final int T__207=207;
	public static final int T__208=208;
	public static final int T__209=209;
	public static final int T__210=210;
	public static final int T__211=211;
	public static final int T__212=212;
	public static final int T__213=213;
	public static final int T__214=214;
	public static final int T__215=215;
	public static final int T__216=216;
	public static final int T__217=217;
	public static final int T__218=218;
	public static final int T__219=219;
	public static final int T__220=220;
	public static final int A=4;
	public static final int B=5;
	public static final int BOOLEAN=6;
	public static final int C=7;
	public static final int COMMENT=8;
	public static final int D=9;
	public static final int DIGIT=10;
	public static final int DURATION=11;
	public static final int DURATION_UNIT=12;
	public static final int E=13;
	public static final int EMPTY_QUOTED_NAME=14;

 =======================================================================
 ==/Users/lei.fu/java/mca/Ratu-Cassandra/src/gen-java/org/apache/cassandra/cql3/Cql_Parser.java
 =======================================================================
// $ANTLR 3.5.2 Parser.g 2023-08-09 16:01:03

    package org.apache.cassandra.cql3;

    import java.util.Collections;
    import java.util.EnumSet;
    import java.util.HashSet;
    import java.util.LinkedHashMap;
    import java.util.List;
    import java.util.Map;
    import java.util.Set;

    import org.apache.cassandra.auth.*;
    import org.apache.cassandra.cql3.conditions.*;
    import org.apache.cassandra.cql3.functions.*;
    import org.apache.cassandra.cql3.restrictions.CustomIndexExpression;
    import org.apache.cassandra.cql3.selection.*;
    import org.apache.cassandra.cql3.statements.*;
    import org.apache.cassandra.cql3.statements.schema.*;
    import org.apache.cassandra.exceptions.ConfigurationException;
    import org.apache.cassandra.exceptions.InvalidRequestException;
    import org.apache.cassandra.exceptions.SyntaxException;
    import org.apache.cassandra.schema.ColumnMetadata;
    import org.apache.cassandra.utils.Pair;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings("all")
public class Cql_Parser extends Parser {
	public static final int EOF=-1;
	public static final int T__197=197;
	public static final int T__198=198;
	public static final int T__199=199;
	public static final int T__200=200;
	public static final int T__201=201;
	public static final int T__202=202;
	public static final int T__203=203;
	public static final int T__204=204;
	public static final int T__205=205;
	public static final int T__206=206;
	public static final int T__207=207;
	public static final int T__208=208;
	public static final int T__209=209;
	public static final int T__210=210;
